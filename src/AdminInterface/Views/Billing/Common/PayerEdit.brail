<% 
def WriteInputGroupHeader(localHeader as string) as string:
%>
	<tr>
		<td class="InputGroupHeader" colspan="2">
			${localHeader}
		</td>
	</tr>
<%
end

def WriteLabelAndEditControle(labelText as string, editControlText as string) as string:
	%>
	<tr>
		<td style="width: 30%">
			${labelText}
		</td>
		<td style="width: 70%">
			${editControlText}
		</td>
	</tr>
	<%
end
%>

${FormHelper.HiddenField("Instance.PayerID")}

<table>
	${WriteInputGroupHeader("Общая информация")}

					
	${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ShortName", 
													"Краткое наименование:"), 
								FormHelper.TextField("Instance.ShortName", {"class" : "BillingInput"}))}
												
	${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.JuridicalName", 
													"Полное наименование:"), 
								FormHelper.TextField("Instance.JuridicalName", {"class" : "BillingInput"}))}
												
	${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.JuridicalAddress", 
													"Юридический адрес:"), 
								FormHelper.TextField("Instance.JuridicalAddress", {"class" : "BillingInput"}))}

	${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.JuridicalAddress", 
													"Адрес получателя:"), 
								FormHelper.TextField("Instance.ReceiverAddress", {"class" : "BillingInput"}))}

	${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.INN", 
													"ИНН:"), 
								FormHelper.TextField("Instance.INN", {"class" : "BillingInput"}))}
												
	${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.KPP", 
													"КПП:"), 
								FormHelper.TextField("Instance.KPP", {"class" : "BillingInput"}))}
																		
	<%
	contactGroupIndex = 0
	component ContactViewer, {"ContactGroups" : Instance.ContactGroupOwner.ContactGroups}:
		section ContactGroupHeader:
		%>
			<tr>
				<% if contactGroupIndex == 0: %>
					<td class="InputGroupHeader">
						<a href="../Contact/NewContactGroup.rails?billingCode=${Instance.PayerID}" target="_blank">Добавить группу контактной информации</a>
					</td>
					<td class="InputGroupHeader">
						${ContactGroupName}
					</td>
				<% else: %>
					<td class="InputGroupHeader" colspan="2">
						${ContactGroupName}
					</td>
				<% end %>
			</tr>
		<% 
							contactGroupIndex++;
		end
		section Item:
		%>
			<tr>
				<td>
					${Label}:
				</td>
				<td>
					${Value}
				</td>
			</tr>
		<% 
		end
		section Person:
		%>
				<a href='../Contact/EditPerson.rails?personId=${PersonId}' target='_blank'>${PersonName}</a>
		<%
		end
		section ContactGroupHeaderLink:
		%>
				<a href='../Contact/EditContactGroup.rails?contactGroupId=${ContactGroupId}' target="_blank" >${ContactGroupName}</a>
		<%
		end
	end
	%>
																		
		${WriteInputGroupHeader("Опции выставки счета")}
					
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.AutoInvoice", 
														"Выставлять счет:"), 
									FormHelper.Select("Instance.AutoInvoice", 
													  {1:"Автоматически", 0:"По запросу"},
													  {"value":"Key", "text":"Value"}))}

		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.DetailInvoice", 
														"Категория счета:"), 
									FormHelper.Select("Instance.DetailInvoice", 
													  {0:"Стандартный", 1:"Детализированный"},
													  {"value":"Key", "text":"Value"}))}
																  
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.PayCycle", 
																	"Периодичность выставления счетов:"), 
									FormHelper.Select("Instance.PayCycle", 
													  {0:"Помесячно", 1:"Поквартально"}, 
													  {"value":"Key", "text":"Value"}))}

		${WriteInputGroupHeader("Доставка корреспонденции")}

		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressCountry", 
														"Страна:"), 
									FormHelper.TextField("Instance.ActualAddressCountry", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressIndex", 
														"Индекс:"), 
									FormHelper.TextField("Instance.ActualAddressIndex", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressProvince", 
														"Область:"), 
									FormHelper.TextField("Instance.ActualAddressProvince", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressTown", 
														"Город:"), 
									FormHelper.TextField("Instance.ActualAddressTown", {"class" : "BillingInput"}))}

		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressRegion", 
														"Район:"), 
									FormHelper.TextField("Instance.ActualAddressRegion", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressStreet", 
														"Улица:"), 
									FormHelper.TextField("Instance.ActualAddressStreet", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressHouse", 
														"Дом:"), 
									FormHelper.TextField("Instance.ActualAddressHouse", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.ActualAddressOffice", 
														"Офис:"), 
									FormHelper.TextField("Instance.ActualAddressOffice", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.BeforeNamePrefix", 
														"Префикс перед \"Кому\":"), 
									FormHelper.TextField("Instance.BeforeNamePrefix", {"class" : "BillingInput"}))}
												
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.AfterNamePrefix", 
														"Надпись после \"Кому\":"), 
									FormHelper.TextField("Instance.AfterNamePrefix", {"class" : "BillingInput"}))}
											
		${WriteInputGroupHeader("Отправка корреспонденции")}
		
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.HaveContract", 
														"Договор получен:"), 
									FormHelper.CheckboxField("Instance.HaveContract"))}
									
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.SendRegisteredLetter", 
														"Отправлять заказным письмом:"), 
									FormHelper.CheckboxField("Instance.SendRegisteredLetter"))}
									
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.SendScannedDocuments", 
														"Отправлять отсканированные документы:"), 
									FormHelper.CheckboxField("Instance.SendScannedDocuments"))}

		${WriteInputGroupHeader("Комментарий")}

		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.Comment", 
														"Комментарий:"), 
									FormHelper.TextArea("Instance.Comment", {"rows":"20", "class" : "BillingInput" }))}
	<tr>
		<tr style="text-align:right">
			<td colspan="2">
			${FormHelper.Submit("Сохранить")}
		</td>
	</tr>		
</table>
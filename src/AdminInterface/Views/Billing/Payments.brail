`<% def WriteInputGroupHeader(localHeader as string) as string: %>
	<tr>
		<td class="InputGroupHeader" colspan="2">
			${localHeader}
		</td>
	</tr>
<% end

def WriteLabelAndEditControle(labelText as string, editControlText as string) as string: %>
	<tr>
		<td style="width: 30%">
			${labelText}
		</td>
		<td style="width: 70%">
			${editControlText}
		</td>
	</tr>
<% end %>

<script type="text/javascript">

	function Filter(linkCaption, link, id) {
		var oldCaption = $(link).html();
		var addresses = $("#" + id + " tr.hidable").toggleClass("hidden");
		$(link).html(linkCaption);
		link.onclick = function () { Filter(oldCaption, link, id) };
	}

	function ShowAdditionalInfo(id, selectorAdditionalInfo, selectorInfoCell, ajaxLink, cssClass) {
		var count = $(selectorAdditionalInfo + id).length;
		if (count > 0) {
			$(selectorAdditionalInfo + id).remove();
			return;
		}
		AjaxRequest(ajaxLink,
			function(html) { $(selectorInfoCell + id).append(html); });
	}

	function ShowAdditionalInfoForUser(userId, cssClass) {
		ShowAdditionalInfo(userId, "#additionalUserInfo", "#additionalUserInfoCell",
			"${siteroot}/Billing/AdditionalUserInfo.rails?userId=" + userId + "&cssClassName=" + cssClass);
	}

	function ShowAdditionalInfoForAddress(addressId, cssClass) {
		ShowAdditionalInfo(addressId, "#additionalAddressInfo", "#additionalAddressInfoCell",
			"${siteroot}/Billing/AdditionalAddressInfo.rails?addressId=" + addressId + "&cssClassName=" + cssClass);
	}

	function updateChildren(id, status) {
		if (status) {
			$("tr[name=Client" + id + "]").removeClass("disabled-by-parent");
			$("tr[name=Client" + id + "] input[name=status]").removeAttr("disabled");
		}
		else {
			$("tr[name=Client" + id + "]").addClass("disabled-by-parent");
			$("tr[name=Client" + id + "] input[name=status]").attr("disabled", "disabled");
		}
	}

	function SetClientStatus(clientId, item) {
		var link = "${siteroot}/Billing/UpdateClientStatus?id=" + clientId + "&status=" + item.checked;
		checkBoxChanger(link, $(item));
	}

	function RefreshTotalSum() {
		var link = "${siteroot}/Billing/TotalSum.rails?payerId=${Instance.PayerID}";
		AjaxRequest(link,
			function(html) { $("#TotalSum").html(html); },
			function(xhr, textStatus, error) { $("#TotalSum").html(""); });
	}

	function ShowJuridicalOrganization(id) {
		$(".tab").hide();
		$(".tabs ul li a.selected").removeClass("selected");
		$("#juridicalOrganization-tab").show();
		$("#juridicalOrganization").addClass("selected");

		var elements = $("div[id*='JuridicalOrganization']");
		for (var i = 0; i < elements.size(); i++) {
			if ($("#" + elements[i].id).attr("class").indexOf("HideVisible") >= 0) {
				$("#" + elements[i].id).click();
			}
		}
		if ($("#JuridicalOrganization" + id + "Header").attr("class").indexOf("ShowHiden") >= 0)
			$("#JuridicalOrganization" + id + "Header").click();
	}

	function showWaiter(element) {
		element.hide();
		var waiter = $("<div></div>").attr("class", "waiter");
		element.after(waiter);
		return waiter;
	}

	function hideWaiter(element, waiter) {
		element.show();
		waiter.remove();
	}

	function Update(url, item, success) {
		var waiter = showWaiter(item);
		AjaxRequest(url,
			function (html) {
				hideWaiter(item, waiter);
				RefreshTotalSum();
//				showSuccessMessage("Сохранено");
				processResponse(html);
				if (success)
					success();
			},
			function (xhr, textStatus, error) {
				hideWaiter(item, waiter);
			}
		);
	}

	function processResponse(data) {
		if (data.message)
			showSuccessMessage(data.message);
		if (data.accounts) {
			$(data.accounts).each(function (index, account) {
				idElement = $("input[name=id][value=" + account.id + "]");
				row = idElement.parents("tr").first();
				row.find("input[name=free]").attr("checked", account.free);
				if (account.free)
					row.addClass("free");
				else
					row.removeClass("free");
			});
		}
	}

	function buildAjaxUrl(url, element) {
		var id = element.parents("tr").find("input[name=id]").val();
		var value = element.val();
		if (element.attr("type") == "checkbox")
			value = element.get(0).checked;

		var link = url + "?id=" + id + "&" + element.attr("name") + "=" + value;
		return link;
	}

	function checkBoxChanger(url, item) {
		fillDependedData(url, item, function (resultUrl) {
			Update(resultUrl, item, function () {
				if (item.attr("name") == "status") {
					var id = $(item).parents("tr").find("input[name=service_id]").val();
					if (id) {
						updateChildren(id, item.attr("checked"));
					}
				}
			});
		});
	}

	$(function () {
		var sendMessageView = new PayerSendMessage();

		$("input[name=free]").change(function () {
			if (this.checked)
				$(this).parents("tr").addClass("free");
			else
				$(this).parents("tr").removeClass("free");
		});

		$("input[name=status]").change(function () {
			if (this.checked) {
				$(this).parents("tr").removeClass("disabled");
			}
			else {
				$(this).parents("tr").addClass("disabled");
			}
		});

		$("#addresses input, #users input, #reports input, #suppliers input").change(function () {
			var url = "${siteroot}/Accounts/Update";
			var item = $(this);
			url = buildAjaxUrl(url, item);
			checkBoxChanger(url, item);
		});

		$("div.collapsible, div.autocollapsible").each(function () {
			var folder = $(this).find("div.VisibleFolder");
			var triggers = $(this).find("div.trigger");

			var count = folder.find("table tr").length;
			if (count > 0)
				count--;
			if (count == 0) {
				if (folder.find("table").length == 0) {
					count = folder.children().length;
				}
			}

			if (count > 5 && $(this).hasClass("autocollapsible")) {
				triggers.addClass("ShowHiden");
				folder.addClass("hidden")
			}
			else {
				triggers.addClass("HideVisible");
			}
		});
	});
</script>

<style>
	.InputGroupHeader.collapsible, .InputGroupHeader.autocollapsible
	{
		margin-bottom:10px;
	}
	
	div.VisibleFolder
	{
		margin-top:10px;
	}
	
	a.current-filter
	{
		color:Black;
		font-weight:bold;
		text-decoration:none;
		cursor:default;
	}
	
	#userMessage_Subject
	{
		width: 100%;
	}
</style>

<div class="left">

	<div style="font-size:large; margin-bottom: 10px">
		<b>Всего к оплате: <span id="TotalSum"> ${payer.PaymentSum.ToString("C")}</span></b>
	</div>
	<% if not payer.IsManualPayments(): %>
	<div style="font-size:large; margin-bottom: 10px">
		<b>Баланс: <span> ${payer.Balance.ToString("C")}</span></b>
	</div>
	<% end %>

	<div class="InputGroupHeader collapsible">

		<div class=trigger>
			<a href="javascript:">Клиенты</a>
		</div>

		<div class="VisibleFolder">
			<table id=clients class="DataTable">
				<thead>
					<tr>
						<th>Включен</th>
						<th>Код</th>
						<th>Название</th>
						<th>Регион</th>
						<th>Тип</th>
						<th>Отключенных копий</th>
						<th>Работающих копий</th>
						<th>Отключенных адресов</th>
						<th>Работающих адресов</th>
						<th>Дата регистрации</th>
						<th></th>
					</tr>
				</thead>
				<% for i, client in enumerate(clients): %>
				<tr id="ClientRow${client.Id}" class="${ViewHelper.GetRowStyle(i)} ${app.Style(client)}" align="center">
					<td class=short>
						<input id="ClientStatus${client.Id}" data-request="AddComment" unchecked="true" name=status type="checkbox" ${"checked" if client.Enabled} onclick="SetClientStatus(${client.Id}, this)" />
						<input name=service_id type=hidden value=${client.Id}>
					</td>
					<td>${client.Id}</td>
					<td>
						<a data-filter="${filter.GetFilterValue(client)}" href="edit.rails?billingCode=${payer.Id}&ClientCode=${client.Id}&tab=payments" ${'class=current-filter' if client == filter.Service}>
							${client.Name}
						</a>
					</td>
					<td>${client.HomeRegion.Name}</td>
					<td>${BindingHelper.GetDescription(client.Type)}</td>
					<td>
						${client.DisabledUserForPayerCount(payer)}
					</td>
					<td>
						${client.EnabledUserForPayerCount(payer)}
					</td>
					<td>
						${client.DisabledAddressForPayerCount(payer)}
					</td>
					<td>
						${client.EnabledAddressForPayerCount(payer)}
					</td>
					<td>
						${client.Registration.RegistrationDate.ToShortDateString() if client.Registration}
					</td>
					<td>
						<a href="mailto:${client.GetEmailsForBilling()}" class="icon icon-email"></a>
					</td>
				</tr>
				<% end %>
			</table>
		</div>
	</div>

	<div class="InputGroupHeader autocollapsible">

		<div class=trigger>
			<a href="javascript:">Поставщики</a>
		</div>

		<div class="VisibleFolder">
			<table class="DataTable" id=suppliers>
				<thead>
					<tr>
						<th></th>
						<th>Включен</th>
						<th>Учтен</th>
						<th>Бесплатно</th>
						<th>Платеж</th>
						<th>Код</th>
						<th>Название</th>
						<th>Регион</th>
						<th>Дата регистрации</th>
						<th>Дата последнего прайс-листа</th>
						<th></th>
					</tr>
				</thead>
				<% for i, supplier in enumerate(suppliers): %>
				<tr class="${ViewHelper.GetRowStyle(i)} ${app.Style(supplier, supplier.Account)}" align="center">
					<td class=short>${app.LinkTo(supplier.Account, "Редактировать", @Edit)}</td>
					<td class=short>
						<input name=id type=hidden value=${supplier.Account.Id}>
						<input name=service_id type=hidden value=${supplier.Id}>
						<input type="checkbox" data-request="AddComment" unchecked="true" name=status ${"checked" unless supplier.Disabled} />
					</td>
					<td class=short>
						<input name=accounted type="checkbox" ${"checked" if supplier.Account.BeAccounted} />
					</td>
					<td class=short>
						<input name=free data-request="FreePeriodEnd" type="checkbox" ${"checked" if supplier.Account.IsFree} />
					</td>
					<td class=short>
						<input name=payment class=payment type=text value="${supplier.Account.Payment.ToString("#.#")}" ${"disabled" unless admin.CanChangePayment}>
					</td>
					<td>${supplier.Id}</td>
					<td>
						<a data-filter="${filter.GetFilterValue(supplier)}" href="edit?billingCode=${payer.Id}&ClientCode=${supplier.Id}&tab=payments" ${'class=current-filter' if supplier == filter.Service}>
							${supplier.Name}
						</a>
					</td>
					<td>${supplier.HomeRegion.Name}</td>
					<td>
						${supplier.Registration.RegistrationDate.ToShortDateString() if supplier.Registration}
					</td>
					<td>${supplier.GetLastPriceUpdate()}</td>
					<td>
						<a class="icon icon-email" href="mailto:${supplier.GetEmailsForBilling()}"></a>
					</td>
				</tr>
				<% end %>
			</table>
		</div>
	</div>

	<div class="InputGroupHeader autocollapsible">

		<div id="UserListHeader" class=trigger>
			<a href="javascript:">Пользователи</a>
		</div>

		<div id="UserListBody" class="VisibleFolder">
			<% if filter.Service: %>
			<div align="right">
				<a id="ShowOrHideUsers" href="javascript:" align="right" onclick="Filter('Показать только для текущего клиента', this, 'users')">Показать всех</a>
			</div>
			<% end %>
			<div align="left">
				<table class="DataTable filter" id="users">
					<thead>
						<tr>
							<th></th>
							<th>Включен</th>
							<th>Учтен</th>
							<th>Бесплатно</th>
							<th>Платеж</th>
							<th>Код пользователя</th>
							<th>Подробнее</th>
							<th>Комментарий</th>
							<th>Дата последнего обновления</th>
							<th>Клиент</th>
							<th>Дата регистрации</th>
						</tr>
					</thead>
					<% for i, user in enumerate(Users): %>
					<% hidden = filter.Service and filter.Service.Id != user.RootService.Id %>
					<tr id="UserRow${user.Id}" class="${ViewHelper.GetRowStyle(i)} ${app.Style(user, user.Accounting)} ${'hidable hidden' if hidden}"
						align="center" name="Client${user.RootService.Id}">
						<td class=short>${app.LinkTo(user.Accounting, "Редактировать", @Edit)}</td>
						<td class=short>
							<input name=id type=hidden value=${user.Accounting.Id}>
							<input name=status data-request="AddComment" unchecked="true" type="checkbox" ${"checked" if user.Enabled} ${"disabled" if user.RootService.Disabled} />
						</td>
						<td class=short>
							<input name=accounted type="checkbox" ${"checked" if user.Accounting.BeAccounted} />
						</td>
						<td class=short>
							<input name=free data-request="FreePeriodEnd" type="checkbox" ${"checked" if user.Accounting.IsFree} />
						</td>
						<td class=short>
							<input name=payment class=payment type=text id=UserPayment${user.Id} value="${user.Accounting.Payment.ToString("#.#")}" ${"disabled" unless admin.CanChangePayment}>
						</td>
						<td>
							<a id="UserLink${user.Id}" href="javascript:" data-filter="User${user.Id}" data-id="${user.Id}">${user.Id}</a>
						</td>
						<td class=short>
							<a id="addressesForUser${user.Id}" class="kfm_home" href="javascript:" onclick="ShowAdditionalInfoForUser(${user.Id}, '${ViewHelper.GetRowStyle(i)}')">
								${user.GetRegions().Count} /
								${user.AvaliableAddresses.Count}
							</a>
						</td>
						<td class="can-not-order">${user.Name}</td>
						<td>${user.Logs.AFTime if user.Logs.AFTime != null}</td>
						<td>${user.RootService.Name}</td>
						<td>${user.Registration.RegistrationDate.ToShortDateString() if user.Registration.RegistrationDate != null}</td>
					</tr>
					<tr id="UserRowHidden${user.Id}" class="${'hidable hidden' if hidden}">
						<td id="additionalUserInfoCell${user.Id}" colspan="10"></td>
					</tr>
					<% end %>
				</table>
			</div>
		</div>
	</div>
			
		<div class="InputGroupHeader autocollapsible">

			<div id="AddressListHeader" class=trigger>
				<a href="javascript:">Адреса доставки</a>
			</div>

			<div id="AddressListBody" class="VisibleFolder">
				<% if filter.Service: %>
				<div align="right">
					<a id="ShowOrHideAddresses" href="javascript:" align="right" onclick="Filter('Показать только для текущего клиента', this, 'addresses')">Показать всех</a>
				</div>
				<% end %>
				<div align="left">
					<table class="DataTable filter" id="addresses">
						<thead>
							<tr>
								<th></th>
								<th>Включен</th>
								<th>Учтен</th>
								<th>Бесплатно</th>
								<th>Платеж</th>
								<th>Адрес</th>
								<th>Пользователи</th>
								<th>Клиент</th>
								<th>Юр. лицо</th>
								<th>Дата регистрации</th>
							</tr>
						</thead>
						<% for i, addr in enumerate(Addresses): %>
						<% hasNoUsers = not addr.AvaliableForUsers.Count %>
						<% hidden = filter.Service and filter.Service.Id != addr.Client.Id %>
						<tr id="AddressRow${addr.Id}" class="${ViewHelper.GetRowStyle(i)} ${'hidable hidden' if hidden} ${app.Style(addr, addr.Accounting)}"
							align="center" name="Client${addr.Client.Id}">
							<td class=short>${app.LinkTo(addr.Accounting, "Редактировать", @Edit)}</td>
							<td class=short>
								<input name=id type=hidden value=${addr.Accounting.Id}>
								<input name=status type="checkbox" data-request="AddComment" unchecked="true" ${"checked" if addr.Enabled} ${"disabled" if addr.Client.Disabled} />
							</td>
							<td class=short>
								<input name=accounted type=checkbox ${"checked" if addr.Accounting.BeAccounted} />
							</td>
							<td class=short>
								<input name=free data-request="FreePeriodEnd" type=checkbox ${"checked" if addr.Accounting.IsFree} />
							</td>
							<td class=short>
								<input name=payment class=payment type=text value="${addr.Accounting.Payment.ToString("#.#")}" ${"disabled" unless admin.CanChangePayment}>
							</td>
							<td>
								<a id="AddressLink${addr.Id}" href="javascript:" data-filter="Address${addr.Id}">${addr.Value}</a>
							</td>
							<td class=short>
								<a id="usersForAddress${addr.Id}" href="javascript:" onclick="ShowAdditionalInfoForAddress(${addr.Id}, '${ViewHelper.GetRowStyle(i)}')">
									<img src="${siteroot}/Images/group.png" border="0" />
								</a>
							</td>
							<td>${addr.Client.Name}</td>
							<td>
								<a href="javascript:" onclick="ShowJuridicalOrganization(${addr.LegalEntity.Id})">${addr.LegalEntity.Name}</a>
							</td>
							<td>${addr.Registration.RegistrationDate.ToShortDateString() if addr.Registration.RegistrationDate != null}</td>
						</tr>
						<tr id="AddressRowHidden${addr.Id}" class='${'hidable hidden' if hidden}'>
							<td id="additionalAddressInfoCell${addr.Id}" colspan="10"></td>
						</tr>
						<% end %>
					</table>
				</div>
			</div>
		</div>

		<% if reports.Count: %>
			<div class="InputGroupHeader autocollapsible" id=reports>

				<div class=trigger>
					<a href="javascript:">Отчеты</a>
				</div>

				<div class="VisibleFolder">
					<table class="DataTable filter">
						<thead>
							<tr>
								<th></th>
								<th>Включен</th>
								<th>Учтен</th>
								<th>Бесплатно</th>
								<th>Платеж</th>
								<th>Код</th>
								<th>Примечание</th>
							</tr>
						</thead>
						<% for i, report in enumerate(reports): %>
						<tr class="${ViewHelper.GetRowStyle(i)} ${app.Style(report)}">
							<td class=short>${app.LinkTo(report, "Редактировать", @Edit)}</td>
							<td class=short>
								<input name=id type=hidden value=${report.Id}>
								<input name=status type="checkbox" ${"checked" if report.Status} />
							</td>
							<td class=short>
								<input name=accounted type="checkbox" ${"checked" if report.BeAccounted} />
							</td>
							<td class=short>
								<input name=free data-request="FreePeriodEnd" type=checkbox ${"checked" if report.IsFree} />
							</td>
							<td  class=short>
								<input name=payment class=payment type=text value="${report.Payment.ToString("#.#")}" ${"disabled" unless admin.CanChangePayment}>
							</td>
							<td>
								<a href="javascript:" data-filter="Report${report.Report.Id}">${report.Report.Id}</a>
							</td>
							<td>!{report.Name}</td>
						</tr>
						<% end %>
					</table>
				</div>
			</div>
		<% end %>

<%
	component Legend, { "LegendItems" : {	"Выключен" : "disabled",
											"Работает бесплатно" : "free",
											"Не получал обновлений более 7 дней" : "old-user-update",
											"Адрес не имеет подключенных пользователей" : "has-no-connected-users",
											"Пользователь не производит заказ" : "can-not-order"},
						"ByCenter" : false}
%>
	<br />

	<div style="margin-bottom:10px;">
		<div class="InputGroupHeader">Операции</div>
		${app.LinkTo(payer, "Доп. счет", @NewInvoice)}
		${app.LinkTo(payer, "Доп. акт", @NewAct)}
		${app.LinkTo(payer, "Реклама", @Ad)}
		${app.LinkTo(payer, "Настройка счетов", @InvoiceGroups)}
		${app.LinkTo(payer, "История сообщений", @Messages)}
		<a href="${siteroot}/RevisionActs/${payer.Id}">Акт сверки</a>
		<a href="mailto:${payer.ClientsMinimailAddressesAsString}">Письмо в минипочту</a>
	</div>

	<div>
		${app.Form("update", {"id" : "PayerInfo"})}

		${FormHelper.HiddenField("Instance.PayerID")}
		<table style="width: 100%">

			${WriteInputGroupHeader("Опции выставки счета")}
		
			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.AutoInvoice", "Выставлять счет:"), 
				app.Edit("Instance.AutoInvoice"))}
		
			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.PayCycle", "Периодичность выставления счетов:"), 
				app.Edit("Instance.PayCycle"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.EmailInvoice", "Отправлять счет по e-mail:"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.EmailInvoice"))}

			${WriteLabelAndEditControle(app.Label("Instance.InvoiceSettings.SendToMinimail"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.SendToMinimail"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.SendPaymentNotification", "Отправлять извещения об оплате:"),
				FormHelper.CheckboxField("Instance.SendPaymentNotification"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.DocumentsOnLastWorkingDay", "Формировать документы последним числом месяца:"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.DocumentsOnLastWorkingDay"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.DoNotGroupParts", "Не объединять позиции в актах, счетах:"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.DoNotGroupParts"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.BeginBalance", "Начальный баланс:"),
				FormHelper.TextField("Instance.BeginBalance"))}

			<% value = "" %>
			<% if Instance.BeginBalanceDate != null: %>
				<% value = Instance.BeginBalanceDate.ToShortDateString() %>
			<% end %>

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.BeginBalanceDate", "Дата начального баланса:"),
										FormHelper.TextFieldValue("Instance.BeginBalanceDate", value) + "<input type=\"button\" class=\"CalendarInput\" />")}
		
			${WriteInputGroupHeader("Комментарий")}
			<tr>
				<td colspan=2>
					${FormHelper.TextArea("Instance.Comment", {"rows":"20", "class" : "BillingInput" })}
				</td>
			</tr>
			<tr style="text-align:right">
				<td colspan="2">${FormHelper.Submit("Сохранить")}</td>
			</tr>
		</table>
		${app.End()}
	</div>

</div>

<div class="right">
<% if IsDefined("UsersMessages") and Users.Count: %>
	<div class="UseCaseGroup">
		${app.Form("SendMessage", {"id" : "SendMessageForm"})}
			<% if UsersMessages.Count: %>
				<div class="InputGroupHeader autocollapsible">
					<div class="trigger">
						<a href="javascript:">Не показанные сообщения</a>
					</div>

					<div class="VisibleFolder">
					<% for i, message in enumerate(UsersMessages): %>
						<div id="CurrentMessageForUser${message.User.Id}" style="text-align: left">
							Остались не показанные сообщения для пользователя ${message.User.GetLoginOrName()}.
							<a href="javascript:void(0);" id="ViewMessageForUser${message.User.Id}" onclick="return ShowMessage(${message.User.Id});">Просмотреть сообщение</a>
						</div>
					<% end %>
					</div>
				</div>
			<% end %>

			<table style="width:100%">
				<tr>
					<td class="InputGroupHeader">
						Сообщение для пользователя:
						<select id="messageReceiverComboBox" name="userMessage.Id">
							<option value="0" selected="selected">Для всех пользователей</option>
							<% for i, user in enumerate(Users): %>
							<option value="${user.Id}">${user.GetLoginOrName()}</option>
							<% end %>
						</select>
					</td>
				</tr>
				<% if IsDefined("SendError"): %>
				<tr>
					<td class="ValidationErrorMessage">
						${SendError}
					</td>
				</tr>
				<% end %>
				<tr id="EmailSubjectRow">
					<td>
						${app.Label("userMessage.Subject")}
						${app.Edit("userMessage.Subject")}
					</td>
				</tr>
				<tr>
					<td>
						<textarea name="userMessage.Message" rows="20" style="width:100%"></textarea>
					</td>
				</tr>
				<tr>
					<td>
						<p>
							${app.Edit("userMessage.SendToEmail")}<br>
							${app.Edit("userMessage.SendToMinimail")}<br>
						</p>
						Показать
						<select name="userMessage.ShowMessageCount">
							<option>1</option>
							<option>2</option>
							<option>5</option>
							<option>10</option>
						</select>
						раз.
					</td>
				</tr>
				<tr style="text-align:right">
					<td>
						<input type="submit" value="Отправить сообщение" ${"disabled" if (Users.Count == 0)} />
					</td>
				</tr>
			</table>
		${app.End()}
		</div>
	<% end %>
	
	<div class="UseCaseGroup">
		<div class="InputGroupHeader" style="margin-bottom:10px;">
			История
		</div>
		<% if filter.IsFiltred: %>
		<a href="javascript:" class="filter-checker">Показать для всех</a>
		<% else: %>
		<a href="javascript:" class="filter-checker" style="display:none"></a>
		<% end %>
		<table class="DataTable filtrable">
		<% if LogRecords.Count: %>
			<thead>
				<tr>
					<th>Дата</th>
					<th>Объект</th>
					<th>Код</th>
					<th>Имя</th>
					<th>Оператор</th>
					<th>Событие</th>
					<th>Комментарий</th>
				</tr>
			</thead>
		<% end %>
		<% for i, log in enumerate(LogRecords): %>
			<tr class="${ViewHelper.GetRowStyle(i)}" ${filter.FilterRow(log)}>
				<td>${log.LogTime}</td>
				<td>${BindingHelper.GetDescription(log.LogType)}</td>
				<td>${log.ObjectId}</td>
				<td>${log.Name}</td>
				<td>${log.OperatorName}</td>
				<td>${log.Message}</td>
				<td class="minTd">${log.Comment}</td>
			</tr>
		<% end %>
		</table>
	</div>
</div>
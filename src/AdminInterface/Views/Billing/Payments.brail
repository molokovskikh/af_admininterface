<% def WriteInputGroupHeader(localHeader as string) as string: %>
	<tr>
		<td class="InputGroupHeader" colspan="2">
			${localHeader}
		</td>
	</tr>
<% end

def WriteLabelAndEditControle(labelText as string, editControlText as string) as string: %>
	<tr>
		<td style="width: 30%">
			${labelText}
		</td>
		<td style="width: 70%">
			${editControlText}
		</td>
	</tr>
<% end %>

<script type="text/javascript">

	function Filter(linkCaption, link, id) {
		var oldCaption = $(link).html();
		var addresses = $("#" + id + " tr.hidable").toggleClass("hidden");
		$(link).html(linkCaption);
		link.onclick = function () { Filter(oldCaption, link, id) };
	}

	function ShowAdditionalInfo(id, selectorAdditionalInfo, selectorInfoCell, ajaxLink, cssClass) {
		var count = $(selectorAdditionalInfo + id).length;
		if (count > 0) {
			$(selectorAdditionalInfo + id).remove();
			return;
		}
		AjaxRequest(ajaxLink,
			function(html) { $(selectorInfoCell + id).append(html); });
	}

	function ShowAdditionalInfoForUser(userId, cssClass) {
		ShowAdditionalInfo(userId, "#additionalUserInfo", "#additionalUserInfoCell",
			"${siteroot}/Billing/AdditionalUserInfo.rails?userId=" + userId + "&cssClassName=" + cssClass);
	}

	function ShowAdditionalInfoForAddress(addressId, cssClass) {
		ShowAdditionalInfo(addressId, "#additionalAddressInfo", "#additionalAddressInfoCell",
			"${siteroot}/Billing/AdditionalAddressInfo.rails?addressId=" + addressId + "&cssClassName=" + cssClass);
	}

	function SetClientStatus(clientId, status) {
		var link = "${siteroot}/Billing/UpdateClientStatus?clientId=" + clientId + "&enabled=" + status;
		ShowElement(true, "#loaderImage" + clientId);
		ShowElement(false, "#ClientStatus" + clientId);
		AjaxRequest(link,
			function(html) {
				if (status) {
					$("#ClientRow" + clientId).removeClass("DisabledByBilling");
					$("tr[name=Client" + clientId + "] input[name=status]").attr("disabled", "");
				}
				else {
					$("#ClientRow" + clientId).addClass("DisabledByBilling");
					$("tr[name=Client" + clientId + "] input[name=status]").attr("disabled", "disabled");
				}
				RefreshTotalSum();
				ShowElement(false, "#loaderImage" + clientId);
				ShowElement(true, "#ClientStatus" + clientId);
			}
		);
	}

	function RefreshTotalSum() {
		var link = "${siteroot}/Billing/TotalSum.rails?payerId=${Instance.PayerID}";
		AjaxRequest(link,
			function(html) { $("#TotalSum").html(html); },
			function(xhr, textStatus, error) { $("#TotalSum").html(""); });
	}

	function ShowOrHideTheme(show) {
		if (show) {
			$("#EmailSubjectRow").css("display", "");
			return;
		}
		$("#EmailSubjectRow").css("display", "none");
	}

	function ShowJuridicalOrganization(id) {
		$(".tab").hide();
		$(".tabs ul li a.selected").removeClass("selected");
		$("#juridicalOrganization-tab").show();
		$("#juridicalOrganization").addClass("selected");

		var elements = $("div[id*='JuridicalOrganization']");
		for (var i = 0; i < elements.size(); i++) {
			if ($("#" + elements[i].id).attr("class").indexOf("HideVisible") >= 0) {
				$("#" + elements[i].id).click();
			}
		}
		if ($("#JuridicalOrganization" + id + "Header").attr("class").indexOf("ShowHiden") >= 0)
			$("#JuridicalOrganization" + id + "Header").click();
	}

	function Update(url, item) {
		var id = $(item).parents("tr").find("input[name=id]").val();
		var value = item.value;
		if (item.type == "checkbox")
			value = item.checked;

		var link = url + "?id=" + id + "&" + item.name + "=" + value;
		AjaxRequest(link,
			function (html) {
				RefreshTotalSum();
			},
			function (xhr, textStatus, error) { }
		);
	}

	$(function () {

		$("input[name=free]").change(function () {
			if (this.checked)
				$(this).parents("tr").addClass("Free");
			else
				$(this).parents("tr").removeClass("Free");
		});

		$("input[name=status]").change(function () {
			if (this.checked) {
				$(this).parents("tr").removeClass("DisabledByBilling");
				$(this).parents("tr").removeClass("disabled");
			}
			else {
				$(this).parents("tr").addClass("DisabledByBilling");
				$(this).parents("tr").addClass("disabled");
			}
		});

		$("#reports input").change(function () {
			Update("${siteroot}/Billing/UpdateReport", this);
		});

		$("#users a[data-id]").click(function () {
			id = $(this).attr("data-id");
			$("select#messageReceiverComboBox option[selected]").removeAttr("selected");
			$("select#messageReceiverComboBox option[value='" + id + "']").attr("selected", "selected");
		});

		$("#addresses input, #users input").change(function () {
			Update("${siteroot}/Account/Update", this);
		});

		$("div.collapsible, div.autocollapsible").each(function () {
			var folder = $(this).find("div.VisibleFolder");
			var triggers = $(this).find("div.trigger");

			var count = folder.find("table tr").length;
			if (count > 0)
				count--;
			if (count == 0) {
				if (folder.find("table").length == 0) {
					count = folder.children().length;
				}
			}

			if (count > 5 && $(this).hasClass("autocollapsible")) {
				triggers.addClass("ShowHiden");
				folder.addClass("hidden")
			}
			else {
				triggers.addClass("HideVisible");
			}
		});
	});
</script>

<style>
	.InputGroupHeader.collapsible, .InputGroupHeader.autocollapsible
	{
		margin-bottom:10px;
	}
	
	div.VisibleFolder
	{
		margin-top:10px;
	}
	
	a.current-filter
	{
		color:Black;
		font-weight:bold;
		text-decoration:none;
		cursor:default;
	}
</style>

<div id="ErrorMessageDiv" class="flash err" style="display: none">
</div>

<div class="left">

	<div style="font-size:large; margin-bottom: 10px">
		<b>Всего к оплате: <span id="TotalSum"> ${payer.TotalSum.ToString("C")}</span></b>
	</div>
	<% if not payer.IsManualPayments(): %>
	<div style="font-size:large; margin-bottom: 10px">
		<b>Баланс: <span> ${payer.Balance.ToString("C")}</span></b>
	</div>
	<% end %>

	<div class="InputGroupHeader collapsible">

		<div class=trigger>
			<a href="javascript:">Клиенты</a>
		</div>

		<div class="VisibleFolder">
			<table id=clients class="DataTable">
				<tr>
					<th>Включен</th>
					<th>Код</th>
					<th>Название</th>
					<th>Регион</th>
					<th>Тип</th>
					<th>Сегмент</th>
					<th>Отключенных копий</th>
					<th>Работающих копий</th>
					<th>Отключенных адресов</th>
					<th>Работающих адресов</th>
					<th>Дата регистрации</th>
					<th></th>
				</tr>
				<% for i, client in enumerate(clients): %>
				<tr id="ClientRow${client.Id}" class="${ViewHelper.GetRowStyle(i)} ${app.Style(client)}" align="center">
					<td style="width: 50px">
						<div id="loaderImage${client.Id}" style="display: none"><img src="${siteroot}/Images/loading.gif" alt="Подождите..." /></div>
						<input id="ClientStatus${client.Id}" type="checkbox" ${"checked" if client.IsClientActive()} onclick="SetClientStatus(${client.Id}, this.checked)" />
					</td>
					<td>${client.Id}</td>
					<td>
						<a data-filter="${filter.GetFilterValue(client)}" href="edit.rails?billingCode=${payer.Id}&ClientCode=${client.Id}&tab=payments" ${'class=current-filter' if client == filter.Service}>
							${client.Name}
						</a>
					</td>
					<td>${client.HomeRegion.Name}</td>
					<td>${BindingHelper.GetDescription(client.Type)}</td>
					<td>${BindingHelper.GetDescription(client.Segment)}</td>
					<td>
						${client.DisabledUserForPayerCount(payer)}
					</td>
					<td>
						${client.EnabledUserForPayerCount(payer)}
					</td>
					<td>
						${client.DisabledAddressForPayerCount(payer)}
					</td>
					<td>
						${client.EnabledAddressForPayerCount(payer)}
					</td>
					<td>
						${client.Registration.RegistrationDate.ToShortDateString() if client.Registration}
					</td>
					<td>
						<a href="mailto:${client.GetEmailsForBilling()}" class="icon icon-email"></a>
					</td>
				</tr>
				<% end %>
			</table>
		</div>
	</div>

	<div class="InputGroupHeader autocollapsible">

		<div class=trigger>
			<a href="javascript:">Поставщики</a>
		</div>

		<div class="VisibleFolder">
			<table class="DataTable">
				<tr>
					<th>Включен</th>
					<th>Код</th>
					<th>Название</th>
					<th>Регион</th>
					<th>Дата регистрации</th>
					<th></th>
				</tr>
				<% for i, supplier in enumerate(suppliers): %>
				<tr class="${ViewHelper.GetRowStyle(i)} ${app.Style(supplier)}" align="center">
					<td style="width: 50px">
						<input type="checkbox" name=status ${"checked" unless supplier.Disabled} onclick="SetClientStatus(${supplier.Id}, this.checked)" />
					</td>
					<td>${supplier.Id}</td>
					<td>
						<a data-filter="${filter.GetFilterValue(supplier)}" href="edit?billingCode=${payer.Id}&ClientCode=${supplier.Id}&tab=payments" ${'class=current-filter' if supplier == filter.Service}>
							${supplier.Name}
						</a>
					</td>
					<td>${supplier.HomeRegion.Name}</td>
					<td>
						${supplier.Registration.RegistrationDate.ToShortDateString() if supplier.Registration}
					</td>
					<td>
						<a class="icon icon-email" href="mailto:${supplier.GetEmailsForBilling()}"></a>
					</td>
				</tr>
				<% end %>
			</table>
		</div>
	</div>

	<div class="InputGroupHeader autocollapsible">

		<div id="UserListHeader" class=trigger>
			<a href="javascript:">Пользователи</a>
		</div>

		<div id="UserListBody" class="VisibleFolder">
			<% if filter.Service: %>
			<div align="right">
				<a id="ShowOrHideUsers" href="javascript:" align="right" onclick="Filter('Показать только для текущего клиента', this, 'users')">Показать всех</a>
			</div>
			<% end %>
			<div align="left">
				<table class="DataTable filter" id="users">
					<tr align="center" valign="top">
						<th>Включен</th>
						<th>Учтен</th>
						<th>Бесплатно</th>
						<th>Платеж</th>
						<th>Код пользователя</th>
						<th>Адреса</th>
						<th>Комментарий</th>
						<th>Дата последнего обновления</th>
						<th>Клиент</th>
						<th>Дата регистрации</th>
					</tr>
					<% for i, user in enumerate(Users): %>
					<% hidden = filter.Service and filter.Service.Id != user.RootService.Id %>
					<tr id="UserRow${user.Id}" class="${ViewHelper.GetRowStyle(i)} ${'OldUserUpdate' if not user.IsActive} ${'Free' if user.IsFree} ${'DisabledByBilling' if not user.Enabled} ${'hidable hidden' if hidden}"
						align="center" name="Client${user.RootService.Id}">
						<td class=short>
							<input name=id type=hidden value=${user.Accounting.Id}>
							<input name=status type="checkbox" ${"checked" if user.Enabled} ${"disabled" if user.RootService.Disabled} />
						</td>
						<td class=short>
							<input name=accounted type="checkbox" ${"checked" if user.Accounting.BeAccounted} />
						</td>
						<td class=short>
							<input name=free type="checkbox" ${"checked" if user.IsFree} />
						</td>
						<td class=short>
							<input name=payment class=payment type=text id=UserPayment${user.Id} value="${user.Accounting.Payment.ToString("#.#")}"> 
						</td>
						<td>
							<a id="UserLink${user.Id}" href="javascript:" data-filter="UserLog${user.Id}" data-id="${user.Id}">${user.Id}</a>
						</td>
						<td class=short>
							<a id="addressesForUser${user.Id}" href="javascript:" onclick="ShowAdditionalInfoForUser(${user.Id}, '${ViewHelper.GetRowStyle(i)}')">
								<img src="${siteroot}/Images/kfm_home.png" border="0" />
							</a>
						</td>
						<td>${user.Name}</td>
						<td>${user.Logs.AFTime if user.Logs.AFTime != null}</td>
						<td>${user.RootService.Name}</td>
						<td>${user.RegistrationDate.ToShortDateString() if user.RegistrationDate != null}</td>
					</tr>
					<tr id="UserRowHidden${user.Id}" class="${'hidable hidden' if hidden}">
						<td id="additionalUserInfoCell${user.Id}" colspan="10"></td>
					</tr>
					<% end %>
				</table>
			</div>
		</div>
	</div>
			
		<div class="InputGroupHeader autocollapsible">

			<div id="AddressListHeader" class=trigger>
				<a href="javascript:">Адреса доставки</a>
			</div>

			<div id="AddressListBody" class="VisibleFolder">
				<% if filter.Service: %>
				<div align="right">
					<a id="ShowOrHideAddresses" href="javascript:" align="right" onclick="Filter('Показать только для текущего клиента', this, 'addresses')">Показать всех</a>
				</div>
				<% end %>
				<div align="left">
					<table class="DataTable filter" id="addresses">
						<tr align="center" valign="top">
							<th>Включен</th>
							<th>Учтен</th>
							<th>Бесплатно</th>
							<th>Платеж</th>
							<th>Адрес</th>
							<th>Пользователи</th>
							<th>Клиент</th>
							<th>Юр. лицо</th>
							<th>Дата регистрации</th>
						</tr>
						<% for i, addr in enumerate(Addresses): %>
						<% hasNoUsers = not addr.AvaliableForUsers.Count %>
						<% hidden = filter.Service and filter.Service.Id != addr.Client.Id %>
						<tr id="AddressRow${addr.Id}" class="${ViewHelper.GetRowStyle(i)} ${'OldUserUpdate' if not addr.IsActive} ${'HasNoConnectedUsers' if (hasNoUsers)} ${'Free' if addr.FreeFlag} ${'DisabledByBilling' if not addr.Enabled} ${'hidable hidden' if hidden}"
							align="center" name="Client${addr.Client.Id}">
							<td class=short>
								<input name=id type=hidden value=${addr.Accounting.Id}>
								<input name=status type="checkbox" ${"checked" if addr.Enabled} ${"disabled" if not addr.Client.IsClientActive()} />
							</td>
							<td class=short>
								<input name=accounted type=checkbox ${"checked" if addr.Accounting.BeAccounted} />
							</td>
							<td class=short>
								<input name=free type=checkbox ${"checked" if addr.FreeFlag} />
							</td>
							<td class=short>
								<input name=payment class=payment type=text value="${addr.Accounting.Payment.ToString("#.#")}"> 
							</td>
							<td>
								<a id="AddressLink${addr.Id}" href="javascript:" data-filter="AddressLog${addr.Id}">${addr.Value}</a>
							</td>
							<td class=short>
								<a id="usersForAddress${addr.Id}" href="javascript:" onclick="ShowAdditionalInfoForAddress(${addr.Id}, '${ViewHelper.GetRowStyle(i)}')">
									<img src="${siteroot}/Images/group.png" border="0" />
								</a>
							</td>
							<td>${addr.Client.Name}</td>
							<td>
								<a href="javascript:" onclick="ShowJuridicalOrganization(${addr.LegalEntity.Id})">${addr.LegalEntity.Name}</a>
							</td>
							<td>${addr.RegistrationDate.ToShortDateString() if addr.RegistrationDate != null}</td>
						</tr>
						<tr id="AddressRowHidden${addr.Id}" class='${'hidable hidden' if hidden}'>
							<td id="additionalAddressInfoCell${addr.Id}" colspan="10"></td>
						</tr>
						<% end %>
					</table>
				</div>
			</div>
		</div>

		<% if reports.Count: %>
			<div class="InputGroupHeader autocollapsible" id=reports>

				<div class=trigger>
					<a href="javascript:">Отчеты</a>
				</div>

				<div class="VisibleFolder">
					<table class="DataTable">
						<tr align="center" valign="top">
							<th>Включен</th>
							<th>Примечание</th>
						</tr>
						<% for i, report in enumerate(reports): %>
						<tr class="${ViewHelper.GetRowStyle(i)}">
							<td class=short>
								<input name=id type=hidden value=${report.Id}>
								<input name=allow type="checkbox" ${"checked" if report.Allow} />
							</td>
							<td>!{report.Comment}</td>
						</tr>
						<% end %>
					</table>
				</div>
			</div>
		<% end %>

<%
	component Legend, { "LegendItems" : {	"Выключен" : "DisabledByBilling",
											"Работает бесплатно" : "Free",
											"Не получал обновлений более 7 дней" : "OldUserUpdate",
											"Адрес не имеет подключенных пользователей" : "HasNoConnectedUsers"},
						"ByCenter" : false}
%>		
	<br />

	<div style="margin-bottom:10px;">
		<div class="InputGroupHeader">Операции</div>
		${app.LinkTo(payer, "Доп. счет", @NewInvoice)}
		${app.LinkTo(payer, "Реклама", @Ad)}
		<a href="${siteroot}/RevisionActs/${payer.Id}">Акт сверки</a>
	</div>

	<div>
		${app.Form("update", {"id" : "PayerInfo"})}

		${FormHelper.HiddenField("Instance.PayerID")}
		<table style="width: 100%">

			${WriteInputGroupHeader("Опции выставки счета")}
		
			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.AutoInvoice", "Выставлять счет:"), 
				app.Edit("Instance.AutoInvoice"))}
		
			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.PayCycle", "Периодичность выставления счетов:"), 
				app.Edit("Instance.PayCycle"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.PrintInvoice", "Печатать счет:"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.PrintInvoice"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.EmailInvoice", "Отправлять счет по e-mail:"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.EmailInvoice"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.SendPaymentNotification", "Отправлять извещения об оплате:"),
				FormHelper.CheckboxField("Instance.SendPaymentNotification"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.DocumentsOnLastWorkingDay", "Формировать документы последним числом месяца:"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.DocumentsOnLastWorkingDay"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.DoNotGroupParts", "Не объединять позиции в актах, счетах:"),
				FormHelper.CheckboxField("Instance.InvoiceSettings.DoNotGroupParts"))}

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.BeginBalance", "Начальный баланс:"),
				FormHelper.TextField("Instance.BeginBalance"))}

			<% value = "" %>
			<% if Instance.BeginBalanceDate != null: %>
				<% value = Instance.BeginBalanceDate.ToShortDateString() %>
			<% end %>

			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.BeginBalanceDate", "Дата начального баланса:"),
										FormHelper.TextFieldValue("Instance.BeginBalanceDate", value) + "<input type=\"button\" class=\"CalendarInput\" />")}
		
			${WriteInputGroupHeader("Оплата")}
										
			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.OldPayDate", 
															"Дата платежа:"), 
										FormHelper.TextFieldValue("Instance.OldPayDate", Instance.OldPayDate.ToShortDateString(), {"class" : "ValidateDate"}) + "<input type=\"button\" class=\"CalendarInput\" />")}
									
			${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.OldTariff", 
															"Сумма платежа:"), 
										FormHelper.TextField("Instance.OldTariff", {"class" : "ValidatePaySum"}))}

			${WriteInputGroupHeader("Комментарий")}
			<tr>
				<td colspan=2>
					${FormHelper.TextArea("Instance.Comment", {"rows":"20", "class" : "BillingInput" })}
				</td>
			</tr>
			<tr style="text-align:right">
				<td colspan="2">${FormHelper.Submit("Сохранить")}</td>
			</tr>
		</table>
		${app.End()}
	</div>

</div>

<div class="right">
<% if IsDefined("UsersMessages") and Users.Count: %>
	<div class="UseCaseGroup">
		${app.Form("SendMessage", {"id" : "SendMessageForm"})}
			<% if UsersMessages.Count: %>
				<div class="InputGroupHeader autocollapsible">
					<div class="trigger">
						<a href="javascript:">Не показанные сообщения</a>
					</div>

					<div class="VisibleFolder">
					<% for i, message in enumerate(UsersMessages): %>
						<div id="CurrentMessageForUser${message.User.Id}" style="text-align: left">
							Остались не показанные сообщения для пользователя ${message.User.GetLoginOrName()}.
							<a href="javascript:void(0);" id="ViewMessageForUser${message.User.Id}" onclick="return ShowMessage(${message.User.Id});">Просмотреть сообщение</a>
						</div>
					<% end %>
					</div>
				</div>
			<% end %>

			<table style="width:100%">
				<tr>
					<td class="InputGroupHeader">
						Сообщение для пользователя:
						<select id="messageReceiverComboBox" name="NewClientMessage.Id">
							<option value="0" selected="selected">Для всех пользователей</option>
							<% for i, user in enumerate(Users): %>
							<option value="${user.Id}">${user.GetLoginOrName()}</option>
							<% end %>
						</select>
					</td>
				</tr>
				<% if IsDefined("SendError"): %>
				<tr>
					<td class="ValidationErrorMessage">
						${SendError}
					</td>
				</tr>
				<% end %>
				<tr id="EmailSubjectRow" style="display: none;">
					<td>Тема письма:<input type="text" style="width: 100%;" name="subjectForEmailToClient" /></td>
				</tr>
				<tr>
					<td>
						<textarea name="NewClientMessage.Message" rows="20" style="width:100%"></textarea>
					</td>
				</tr>
				<tr>
					<td>
						<p>
							<input id="sendMessageToClientEmails" type="checkbox" value="true" name="sendMessageToClientEmails" onclick="ShowOrHideTheme(this.checked)" />
							<label for="sendMessageToClientEmails">Отправлять это сообщение также на Email клиенту</label>
							<input type="hidden" name="sendMessageToClientEmails" value="false" />
						</p>
						Показать
						<select name="NewClientMessage.ShowMessageCount">
							<option>1</option>
							<option>2</option>
							<option>5</option>
							<option>10</option>
						</select>
						раз.
					</td>
				</tr>
				<tr style="text-align:right">
					<td>
						<input type="submit" value="Отправить сообщение" ${"disabled" if (Users.Count == 0)} />
					</td>
				</tr>
			</table>
		${app.End()}
		</div>
	<% end %>
	
	<div class="UseCaseGroup">
		<div class="InputGroupHeader" style="margin-bottom:10px;">
			Статистика включений/выключений
		</div>
		<% if filter.IsFiltred: %>
		<a href="javascript:" class="filter-checker">Показать для всех</a>
		<% else: %>
		<a href="javascript:" class="filter-checker" style="display:none"></a>
		<% end %>
		<table class="DataTable filtrable">
		<% if LogRecords.Count: %>
			<thead>
				<tr>
					<th>Дата</th>
					<th>Объект</th>
					<th>Имя</th>
					<th>Оператор</th>
					<th>Статус</th>
				</tr>
			</thead>
		<% end %>
		<% for i,logRecord in enumerate(LogRecords): %>
			<tr class="${ViewHelper.GetRowStyle(i)}" ${filter.FilterRow(logRecord)}>
				<td>${logRecord.LogTime}</td>
				<td>${BindingHelper.GetDescription(logRecord.LogType)}</td>
				<td>${logRecord.Value}</td>
				<td>${logRecord.OperatorName}</td>
				<td>${ViewHelper.HumanReadableStatus(logRecord.Status)}</td>
			</tr>
		<% end %>
		</table>
	</div>
</div>
<% def WriteInputGroupHeader(localHeader as string) as string: %>
	<tr>
		<td class="InputGroupHeader" colspan="2">
			${localHeader}
		</td>
	</tr>
<% end

def WriteLabelAndEditControle(labelText as string, editControlText as string) as string: %>
	<tr>
		<td style="width: 30%">
			${labelText}
		</td>
		<td style="width: 70%">
			${editControlText}
		</td>
	</tr>
<% end %>

<script type="text/javascript">

	function Filter(linkCaption, link, id) {
		var oldCaption = $(link).html();
		var addresses = $("#" + id + " tr.hidable").toggleClass("hidden");
		$(link).html(linkCaption);
		link.onclick = function () { Filter(oldCaption, link, id) };
	}

	function ShowAdditionalInfo(id, selectorAdditionalInfo, selectorInfoCell, ajaxLink, cssClass) {
		var count = $(selectorAdditionalInfo + id).length;
		if (count > 0) {
			$(selectorAdditionalInfo + id).remove();
			return;
		}
		AjaxRequest(ajaxLink,
			function(html) { $(selectorInfoCell + id).append(html); });
	}

	function ShowAdditionalInfoForUser(userId, cssClass) {
		ShowAdditionalInfo(userId, "#additionalUserInfo", "#additionalUserInfoCell",
			"${siteroot}/Billing/AdditionalUserInfo.rails?userId=" + userId + "&cssClassName=" + cssClass);
	}

	function ShowAdditionalInfoForAddress(addressId, cssClass) {
		ShowAdditionalInfo(addressId, "#additionalAddressInfo", "#additionalAddressInfoCell",
			"${siteroot}/Billing/AdditionalAddressInfo.rails?addressId=" + addressId + "&cssClassName=" + cssClass);
	}

	function SetClientStatus(clientId, status) {
		var link = "${siteroot}/Billing/UpdateClientStatus?clientId=" + clientId + "&enabled=" + status;
		ShowElement(true, "#loaderImage" + clientId);
		ShowElement(false, "#ClientStatus" + clientId);
		AjaxRequest(link,
			function(html) {
				if (status) {
					$("#ClientRow" + clientId).removeClass("DisabledByBilling");
					$("tr[name=Client" + clientId + "] input[name=status]").attr("disabled", "");
				}
				else {
					$("#ClientRow" + clientId).addClass("DisabledByBilling");
					$("tr[name=Client" + clientId + "] input[name=status]").attr("disabled", "disabled");
				}
				RefreshTotalSum();
				ShowElement(false, "#loaderImage" + clientId);
				ShowElement(true, "#ClientStatus" + clientId);
			}
		);
	}

	function RefreshTotalSum() {
		var link = "${siteroot}/Billing/TotalSum.rails?payerId=${Instance.PayerID}";
		AjaxRequest(link, function(html) { $("#TotalSum").html(html); },
			function(xhr, textStatus, error) { $("#TotalSum").html(""); });
	}

	function FilterBy(objectType, objectId) {
		var typeName = "";
		if (objectType == "Address")
			typeName = "${AdminInterface.Models.Billing.SwitchLogType.AddressLog}";
		if (objectType == "User") {
			$("select#messageReceiverComboBox option[selected]").removeAttr("selected");
			$("select#messageReceiverComboBox option[value='" + objectId + "']").attr("selected", "selected");
			typeName = "${AdminInterface.Models.Billing.SwitchLogType.UserLog}";
		}
		var id = "logRow" + typeName + objectId;

		var rows = $("tr[id*='logRow']").each(function (row) { 
			if (row.id == id) {
				$(row).attr("style", "display: '';");
				return;
			}
			$(row).attr("style", "display: none;");
		});

		markAsSelected(objectId, objectType + "Link", objectType + "Value");
	}

	function markAsSelected(id, linkIdPart, textIdPart) {
		var linkId = linkIdPart + id;
		var links = $("a[id*='" + linkIdPart + "']");
		var texts = $("div[id*='" + textIdPart + "']");

		for (var i = 0; i < links.size(); i++) {
			if (links.get(i).Id == linkId) {
				$(links.get(i)).attr("style", "display: none;");
				$(texts.get(i)).attr("style", "display: '';");
				continue;
			}
			$(links.get(i)).attr("style", "display: '';");
			$(texts.get(i)).attr("style", "display: none;");
		}
	}

	function ShowOrHideTheme(show) {
		if (show) {
			$("#EmailSubjectRow").css("display", "");
			return;
		}
		$("#EmailSubjectRow").css("display", "none");
	}

	function ShowJuridicalOrganization(id) {
		$(".tab").hide();
		$(".tabs ul li a.selected").removeClass("selected");
		$("#juridicalOrganization-tab").show();
		$("#juridicalOrganization").addClass("selected");

		var elements = $("div[id*='JuridicalOrganization']");
		for (var i = 0; i < elements.size(); i++) {
			if ($("#" + elements[i].id).attr("class").indexOf("HideVisible") >= 0) {
				$("#" + elements[i].id).click();
			}
		}
		if ($("#JuridicalOrganization" + id + "Header").attr("class").indexOf("ShowHiden") >= 0)
			$("#JuridicalOrganization" + id + "Header").click();
	}

	function Update(url, item) {
		var id = $(item).parents("tr").find("input[name=id]").val();
		var value = item.value;
		if (item.type == "checkbox")
			value = item.checked;

		var link = url + "?id=" + id + "&" + item.name + "=" + value;
		AjaxRequest(link,
			function (html) {
				RefreshTotalSum();
			},
			function (xhr, textStatus, error) { }
		);
	}

	$(function () {

		$("input[name=free]").change(function () {
			if (this.checked)
				$(this).parents("tr").addClass("Free");
			else
				$(this).parents("tr").removeClass("Free");
		});

		$("input[name=status]").change(function () {
			if (this.checked)
				$(this).parents("tr").removeClass("DisabledByBilling");
			else
				$(this).parents("tr").addClass("DisabledByBilling");
		});

		$("#reports input").change(function () {
			Update("${siteroot}/Billing/UpdateReport", this);
		});

		$("#addresses input, #users input").change(function () {
			Update("${siteroot}/Account/Update", this);
		});
	});
</script>

<div id="ErrorMessageDiv" class="flash err" style="display: none">
</div>

<div class="left">

	<div style="font-size:large; margin-bottom: 10px">
		<b>Всего к оплате: <span id="TotalSum"> ${TotalSum.ToString("#.#")}</span> рублей</b>
	</div>

	<div class="InputGroupHeader" style="margin-bottom:10px;width: 100%;">
		<%
		headerCssClass = "ShowHiden"
		bodyCssClass = "hidden"
		if (IsDefined("ShowClients") and ShowClients) or Instance.Clients.Count < 5:
			headerCssClass = "HideVisible"
			bodyCssClass = ""
		end
		%>
		<div class="${headerCssClass}">
			<a href="javascript:">Клиенты</a>
		</div>

		<div class="VisibleFolder ${bodyCssClass}">
			<table id=clients class="DataTable"">
				<tr>
					<th>Включен</th>
					<th>Код</th>
					<th>Название</th>
					<th>Регион</th>
					<th>Тип</th>
					<th>Сегмент</th>
					<th>Копий</th>
					<th>Адресов доставки</th>
					<th>Дата регистрации</th>
					<th></th>
				</tr>
				<% for i, client in enumerate(clients): %>
				<tr id="ClientRow${client.Id}" class="${ViewHelper.GetRowStyle(i)} ${"DisabledByBilling" if not client.IsClientActive()}" align="center">
					<td style="width: 50px">
						<div id="loaderImage${client.Id}" style="display: none"><img src="${siteroot}/Images/loading.gif" alt="Подождите..." /></div>
						<input id="ClientStatus${client.Id}" type="checkbox" ${"checked" if client.IsClientActive()} onclick="SetClientStatus(${client.Id}, this.checked)" />
					</td>
					<td>${client.Id}</td>
					<td>
					<% if IsDefined("Client") and client.Id == Client.Id: %>
						<strong>${client.Name}</strong>
					<% else: %>
						<a href="edit.rails?ClientCode=${client.Id}&showClients=true&tab=payments">
							${client.Name}
						</a>
					<% end %>
					</td>
					<td>${client.HomeRegion.Name}</td>
					<td>${BindingHelper.GetDescription(client.Type)}</td>
					<td>${BindingHelper.GetDescription(client.Segment)}</td>
					<td>
						<% if client.WorkCopyCount(): %>
						${client.WorkCopyCount()}
						<% else: %>
						-
						<% end %>
					</td>
					<td>
						<% if client.IsDrugstore(): %>
						${client.Addresses.Count}
						<% else: %>
						-
						<% end %>
					</td>
					<td>
						${client.RegistrationDate.ToShortDateString()}
					</td>
					<td>
						<a href="mailto:${client.GetEmailsForBilling()}"><img src="${siteroot}/Images/email.png" border="0" /></a>
					</td>
				</tr>
				<% end %>
			</table>
		</div>
	</div>

	<div class="InputGroupHeader" style="margin-bottom:10px;">
		<%
		headerCssClass = "ShowHiden"
		bodyCssClass = "hidden"
		if (IsDefined("ShowUsers") and ShowUsers) or users.Count < 5:
			headerCssClass = "HideVisible" 
			bodyCssClass =""
		end
		%>
		<div id="UserListHeader" class="${headerCssClass}">
			<a href="javascript:">Пользователи</a>
		</div>

		<div id="UserListBody" class="VisibleFolder ${bodyCssClass}">
			<% if IsDefined("Client") and clients.Count: %>
			<div align="right">
				<a id="ShowOrHideUsers" href="javascript:" align="right" onclick="Filter('Показать только для текущего клиента', this, 'users')">Показать всех</a>
			</div>
			<% end %>
			<br />
				<div align="left">
					<table class="DataTable" id="users">
						<tr align="center" valign="top">
							<th>Включен</th>
							<th>Учтен</th>
							<th>Бесплатно</th>
							<th>Платеж</th>
							<th>Код пользователя</th>
							<th>Адреса</th>
							<th>Комментарий</th>
							<th>Дата последнего обновления</th>
							<th>Клиент</th>
						</tr>
						<% for i, user in enumerate(Users): %>
						<% hidden = IsDefined("Client") and Client.Id != user.Client.Id %>
						<tr id="UserRow${user.Id}" class="${ViewHelper.GetRowStyle(i)} ${'OldUserUpdate' if not user.IsActive} ${'Free' if user.IsFree} ${'DisabledByBilling' if not user.Enabled} ${'hidable hidden' if hidden}"
							align="center" name="Client${user.Client.Id}">
							<td class=short>
								<input name=id type=hidden value=${user.Accounting.Id}>
								<input name=status type="checkbox" ${"checked" if user.Enabled} ${"disabled" if not user.Client.IsClientActive()} />
							</td>
							<td class=short>
								<input name=accounted type="checkbox" ${"checked" if user.Accounting.BeAccounted} />
							</td>
							<td class=short>
								<input name=free type="checkbox" ${"checked" if user.IsFree} />
							</td>
							<td class=short>
								<input name=payment class=payment type=text id=UserPayment${user.Id} value="${user.Accounting.Payment.ToString("#.#")}"> 
							</td>
							<td>
								<a id="UserLink${user.Id}" href="javascript:" onclick="FilterBy('User', ${user.Id})">${user.Id}</a>
							</td>
							<td class=short>
								<a id="addressesForUser${user.Id}" href="javascript:" onclick="ShowAdditionalInfoForUser(${user.Id}, '${ViewHelper.GetRowStyle(i)}')">
									<img src="${siteroot}/Images/kfm_home.png" border="0" />
								</a>
							</td>
							<td>${user.Name}</td>
							<td>${user.Logs.AFTime if user.Logs.AFTime != null}</td>
							<td>${user.Client.Name}</td>
						</tr>
						<tr id="UserRowHidden${user.Id}" class='${'hidable hidden' if hidden}'">
							<td id="additionalUserInfoCell${user.Id}" colspan="10"></td>
						</tr>
						<% end %>
					</table>
				</div>
			</div>
		</div>
			
		<div class="InputGroupHeader" style="margin-bottom:10px;">
			<%
			headerCssClass = "ShowHiden"
			bodyCssClass = "hidden"
			if (IsDefined("ShowAddresses") and ShowAddresses) or addresses.Count < 5:
				headerCssClass = "HideVisible"
				bodyCssClass = ""
			end
			%>
			<div id="AddressListHeader" class="${headerCssClass}">
				<a href="javascript:">Адреса доставки</a>
			</div>
			<div id="AddressListBody" class="VisibleFolder ${bodyCssClass}">
				<% if IsDefined("Client") and clients.Count > 1: %>
				<div align="right">
					<a id="ShowOrHideAddresses" href="javascript:" align="right" onclick="Filter('Показать только для текущего клиента', this, 'addresses')">Показать всех</a>
				</div>
				<% end %>
				<br />
				<div align="left">
					<table class="DataTable" id="addresses">
						<tr align="center" valign="top">
							<th>Включен</th>
							<th>Учтен</th>
							<th>Бесплатно</th>
							<th>Платеж</th>
							<th>Адрес</th>
							<th>Пользователи</th>
							<th>Клиент</th>
							<th>Юр. лицо</th>
						</tr>
						<% for i, addr in enumerate(Addresses): %>
						<% hasNoUsers = not addr.AvaliableForUsers.Count %>
						<% hidden = IsDefined("Client") and Client.Id != addr.Client.Id %>
						<tr id="AddressRow${addr.Id}" class="${ViewHelper.GetRowStyle(i)} ${'OldUserUpdate' if not addr.IsActive} ${'HasNoConnectedUsers' if (hasNoUsers)} ${'Free' if addr.FreeFlag} ${'DisabledByBilling' if not addr.Enabled} ${'hidable hidden' if hidden}"
							align="center" name="Client${addr.Client.Id}">
							<td class=short>
								<input name=id type=hidden value=${addr.Accounting.Id}>
								<input name=status type="checkbox" ${"checked" if addr.Enabled} ${"disabled" if not addr.Client.IsClientActive()} />
							</td>
							<td class=short>
								<input name=accounted type=checkbox ${"checked" if addr.Accounting.BeAccounted} />
							</td>
							<td class=short>
								<input name=free type=checkbox ${"checked" if addr.FreeFlag} />
							</td>
							<td class=short>
								<input name=payment class=payment type=text value="${addr.Accounting.Payment.ToString("#.#")}"> 
							</td>
							<td>
								<a id="AddressLink${addr.Id}" href="javascript:" onclick="FilterBy('Address', ${addr.Id})">${addr.Value}</a>
							</td>
							<td class=short>
								<a id="usersForAddress${addr.Id}" href="javascript:" onclick="ShowAdditionalInfoForAddress(${addr.Id}, '${ViewHelper.GetRowStyle(i)}')">
									<img src="${siteroot}/Images/group.png" border="0" />
								</a>
							</td>
							<td>${addr.Client.Name}</td>
							<td>
								<a href="javascript:" onclick="ShowJuridicalOrganization(${addr.LegalEntity.Id})">${addr.LegalEntity.Name}</a>
							</td>
						</tr>
						<tr id="AddressRowHidden${addr.Id}" class='${'hidable hidden' if hidden}'>
							<td id="additionalAddressInfoCell${addr.Id}" colspan="10"></td>
						</tr>
						<% end %>
					</table>
				</div>
			</div>
		</div>

		<% if reports.Count: %>
		<div class="InputGroupHeader" id=reports style="margin-bottom:10px;">
			<div class="HideVisible">
				<a href="javascript:">Отчеты</a>
			</div>
			<div>
				<table class="DataTable">
					<tr align="center" valign="top">
						<th>Включен</th>
						<th>Примечание</th>
					</tr>
					<% for i, report in enumerate(reports): %>
					<tr class="${ViewHelper.GetRowStyle(i)}">
						<td class=short>
							<input name=id type=hidden value=${report.Id}>
							<input name=allow type="checkbox" ${"checked" if report.Allow} />
						</td>
						<td>!{report.Comment}</td>
					</tr>
					<% end %>
				</table>
			</div>
		</div>
		<% end %>

<% 
	component Legend, { "LegendItems" : {	"Выключен" : "DisabledByBilling", 
											"Работает бесплатно" : "Free", 
											"Не получал обновлений более 7 дней" : "OldUserUpdate",
											"Адрес не имеет подключенных пользователей" : "HasNoConnectedUsers"},
						"ByCenter" : false}
%>		
	<br />

	<div>
		<form id="PayerInfo" action="update.rails" method="post">
			<% if IsDefined("Client"): %>
			${FormHelper.HiddenField("ClientCode", Client.Id)}
			<% end %>
			${FormHelper.HiddenField("Instance.PayerID")}
			${FormHelper.HiddenField("tab", "payments")}
			<table style="width: 100%">
			
		${WriteInputGroupHeader("Опции выставки счета")}
		
		
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.AutoInvoice", "Выставлять счет:"), 
									FormHelper.Select("Instance.AutoInvoice", 
													  {1:"Автоматически", 0:"По запросу"},
													  {"value":"Key", "text":"Value"}))}
													  
		<% if not Instance.IsManualPayments(): %>
		
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.PayCycle", "Периодичность выставления счетов:"), 
									FormHelper.Select("Instance.PayCycle", 
													  {0:"Помесячно", 1:"Поквартально"}, 
													  {"value":"Key", "text":"Value"}))}
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.PrintInvoice", "Печатать счет:"),
									FormHelper.CheckboxField("Instance.InvoiceSettings.PrintInvoice"))}

		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.InvoiceSettings.EmailInvoice", "Отправлять счет по e-mail:"),
									FormHelper.CheckboxField("Instance.InvoiceSettings.EmailInvoice"))}
		<% end %>
		
		<% if Instance.IsManualPayments(): %>
		${WriteInputGroupHeader("Оплата")}
										
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.OldPayDate", 
														"Дата платежа:"), 
									FormHelper.TextFieldValue("Instance.OldPayDate", Instance.OldPayDate.ToShortDateString(), {"class" : "ValidateDate"}) + "<input type=\"button\" class=\"CalendarInput\" />")}
									
		${WriteLabelAndEditControle(FormHelper.LabelFor("Instance.OldTariff", 
														"Сумма платежа:"), 
									FormHelper.TextField("Instance.OldTariff", {"class" : "ValidatePaySum"}))}
		<% end %>
									
		${WriteInputGroupHeader("Комментарий")}
				<tr>
					<td colspan=2>
						${FormHelper.TextArea("Instance.Comment", {"rows":"20", "class" : "BillingInput" })}
					</td>
				</tr>
				<tr style="text-align:right">
					<td colspan="2">${FormHelper.Submit("Сохранить")}</td>
				</tr>
			</table>
		</form>
	</div>

</div>

<div class="right">
<% if IsDefined("UsersMessages") and Users.Count: %>
		<div class="UseCaseGroup">
		<form id="SendMessageForm" action="sendMessage.rails" method="post">
			<% if IsDefined("Client"): %>
			${FormHelper.HiddenField("clientId", Client.Id)}
			<% end %>
			${FormHelper.HiddenField("payerId", Instance.Id)}
			${FormHelper.HiddenField("tab", "payments")}
			<table style="width:100%">
					<tr>
						<% if (CountUsersWithMessages > 0): %>
						<td class="InputGroupHeader" title="Сообщения для пользователей">
						<% cssClassHeader = "ShowHiden"
							cssClassBody = "hidden"
							if (CountUsersWithMessages < 5):
								cssClassHeader = "HideVisible"
								cssClassBody = ""
							end %>
							<div class="${cssClassHeader}" title="Сообщения для пользователей">
								<a href="javascript:" title="Сообщения для пользователей">Не показанные сообщения</a>
							</div>
							<div class="VisibleFolder ${cssClassBody}" title="Сообщения для пользователей">
								<br />
							<% for i, user in enumerate(Users): 
								if (UsersMessages[i] != null) and UsersMessages[i].IsContainsNotShowedMessage(): %>
								<div id="CurrentMessageForUser${user.Id}" style="text-align: left">
								Остались не показанные сообщения для пользователя ${user.GetLoginOrName()}.
									<a href="javascript:void(0);" id="ViewMessageForUser${user.Id}" onclick="return ShowMessage(${user.Id});">Просмотреть сообщение</a>
								</div>
							<% end
							end %>
							</div>
							<% end %>
						</td>
					</tr>
					<tr><td><br /></td></tr>
					<tr>
						<td class="InputGroupHeader">
							Сообщение для пользователя:
							<select id="messageReceiverComboBox" name="NewClientMessage.ClientCode">
								<option value="0" selected="selected">Для всех пользователей</option>
								<% for i, user in enumerate(Users): %>
								<option value="${user.Id}">${user.GetLoginOrName()}</option>
								<% end %>
							</select>
						</td>
					</tr>
					<% if IsDefined("SendError"): %>
					<tr>
						<td class="ValidationErrorMessage">
							${SendError}
						</td>
					</tr>
					<% end %>
					<tr id="EmailSubjectRow" style="display: none;">
						<td>Тема письма:<input type="text" style="width: 100%;" name="subjectForEmailToClient" /></td>
					</tr>
					<tr>
						<td>
							<textarea name="NewClientMessage.Message" rows="20" style="width:100%"></textarea>
						</td>
					</tr>
					<tr>
						<td>
							<p>
								<input id="sendMessageToClientEmails" type="checkbox" value="true" name="sendMessageToClientEmails" onclick="ShowOrHideTheme(this.checked)" />
								<label for="sendMessageToClientEmails">Отправлять это сообщение также на Email клиенту</label>
								<input type="hidden" name="sendMessageToClientEmails" value="false" />
							</p>
							Показать
							<select name="NewClientMessage.ShowMessageCount">
								<option>1</option>
								<option>2</option>
								<option>5</option>
								<option>10</option>
							</select>
							раз.
						</td>
					</tr>
					<tr style="text-align:right">
						<td>
							<input type="submit" value="Отправить сообщение" ${"disabled" if (Users.Count == 0)} />
						</td>
					</tr>
			</table>
		</form>
		</div>
	<% end %>
	
	<div class="UseCaseGroup">
		<div class="InputGroupHeader" style="margin-bottom:10px;">
			Статистика включений/выключений
		</div>
		<table class="DataTable">
		<% if LogRecords.Count: %>
			<thead>
				<tr>
					<th>Дата</th>
					<th>Объект</th>
					<th>Имя</th>
					<th>Оператор</th>
					<th>Статус</th>
				</tr>
			</thead>
		<% end %>
		<% for i,logRecord in enumerate(LogRecords): %>
			<tr class="${ViewHelper.GetRowStyle(i)}" id="logRow${logRecord.LogType}${logRecord.ObjectId}">
				<td>${logRecord.LogTime}</td>
				<td>${BindingHelper.GetDescription(logRecord.LogType)}</td>
				<td>${logRecord.Value}</td>
				<td>${ViewHelper.GetHumanReadableOperatorName(logRecord.OperatorName)}</td>
				<td>${ViewHelper.HumanReadableStatus(logRecord.Status)}</td>
			</tr>
		<% end %>
		</table>
	</div>
</div>
<% component CaptureFor, {"id" : "Title"}:%>
	Поиск плательщиков
<% end %>

<% component Bubble, {"bredcrumbs" : []} %>

<div class="CenterBlock FilterBlock">
	<h3>
		Фильтр плательщиков
	</h3>
	
	<form id="SearchForm" method="post">
		${FormHelper.HiddenField("filter.SortBy")}
		${FormHelper.HiddenField("filter.SortDirection")}
		<fieldset>
			<legend>Искать по:</legend>
			<table>
				<col style="width:60%" />
				<col style="width:40%" />
				<tr>
					<td class=value>
						${app.Edit("filter.SearchText")}
					</td>
					<td>
						${app.Edit("filter.SearchBy", "RadioList")}
					</td>
				</tr>
			</table>
		</fieldset>
	
		<fieldset>
			<legend>Фильтры:</legend>
			<table>
				<col style="width:40%" />
				<col style="width:60%" />
				${app.FilterFor("filter.PayerState")}
				${app.FilterFor("filter.Region")}
				${app.FilterFor("filter.Segment")}
				${app.FilterFor("filter.ClientType")}
				${app.FilterFor("filter.ClientStatus")}
				${app.FilterFor("filter.Recipient")}
				${app.FilterFor("filter.InvoiceType")}
				${app.FilterFor("filter.SearchWithoutDocuments")}
				${app.FilterFor("filter.Period")}
				${app.FilterFor("filter.DocumentType")}
			</table>
		</fieldset>
		<div class=submit>
			${FormHelper.Submit("Найти")}
		</div>
	</form>
</div>

<% if IsDefined("searchResults"): %>
	<% if searchResults.Count == 0: %>
	<div class="EmptyData">
		По вашему запросу ничего не найдено
	</div>
	<% else: %>
	<div>
		<table class="HighLightCurrentRow DataTable">
			<thead>
				<tr>
					<th>
						${app.Sortable("Договор", "PayerId")}
					</th>
					<th>
						${app.Sortable("Краткое наименование", "ShortName")}
					</th>
					<th>
						${app.Sortable("Получатель платежей", "Recipient")}
					</th>
					<th>
						${app.Sortable("Сумма платежа", "PaymentSum")}
					</th>
					<th style="width: 190px;">
						${app.Sortable("Баланс", "Balance")}
					</th>
					<th>
						${app.Sortable("Дата регистрации", "LastClientRegistrationDate")}
					</th>
					<th>
						${app.Sortable("Отключенных копий", "DisabledUsersCount")}
					</th>
					<th>
						${app.Sortable("Работающих копий", "EnabledUsersCount")}
					</th>
					<th>
						${app.Sortable("Отключенных адресов", "DisabledAddressesCount")}
					</th>
					<th>
						${app.Sortable("Работающих адресов", "EnabledAddressesCount")}
					</th>
					<th>
						Сегменты
					</th>
					<th>
						Регионы
					</th>
				</tr>
			</thead>
			<% for i, searchResult in enumerate(searchResults): %>
			<tr class="${ViewHelper.GetRowStyle(i)} ${app.Style(searchResult)}">
				<td class=short>
					<a href="edit?BillingCode=${searchResult.PayerId}">${searchResult.PayerId}</a>
				</td>
				<td>
					${searchResult.ShortName}
				</td>
				<td>
					${searchResult.Recipient}
				</td>
				<td class=short>
					${searchResult.PaymentSum.ToString("C")}
				</td>
				<td>
					${searchResult.Balance.ToString("0.#")}
					<% if not searchResult.ShowPayDate: %>
					<br>Счет выставляется автоматически
					<% end %>
				</td>
				<td class=short>
					${searchResult.LastClientRegistrationDate.ToShortDateString()}
				</td>
				<td class=short>
					${searchResult.DisabledUsersCount}
				</td>
				<td class=short>
					${searchResult.EnabledUsersCount}
				</td>
				<td class=short>
					${searchResult.DisabledAddressesCount}
				</td>
				<td class=short>
					${searchResult.EnabledAddressesCount}
				</td>
				<td>
					${searchResult.GetSegments()}
				</td>
				<td>
					${searchResult.Regions}
				</td>
			</tr>
			<% end %>
		</table>
	</div>

		<% 
		component Legend, { "LegendItems" : {	"Плательщик отключен" : "disabled", 
												"Должник" : "debtor" } } 
		%>
	

	<% end %>
<% end %>
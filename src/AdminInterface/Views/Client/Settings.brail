<% component Bubble, {"bredcrumbs" : [("Поиск пользователей", "${siteroot}/users/search"), 
									  ("Информация о клиенте", "${siteroot}/client/${client.Id}"),
									  ("Настройка аптеки", "")]} %>

<style>
	div.search span.message
	{
		display:block;
		clear:both;
		font-style:italic;
	}
	
	div.search span.message.error
	{
		color:Red;
	}
</style>
<script language="javascript">
	$(function () {

		$("#excludes").data("template", function() {
			return $("<tr>")
				.append($("<td>").append($("<input type=button value=Удалить>").addClass("delete")))
				.append($("<td>")
					.append(searchTemplate("Выберете поставщика", "${siteroot}/Client/${client.Id}/SearchSuppliers"))
					.append("<input type=hidden name=drugstore.OfferMatrixExcludes[0].Id>"));
		});

		<% if drugstore.NoiseCosts: %>
			setNoise(true);
		<% end %>

		$("#drugstore_IsConvertFormat").click(function(){
			if (this.checked)
				$("#SearchAssortimentPriceBlock").css("display", "");
			else
				CancelAssortimentPriceForDbf();
		});

		$("#SearchAssortimentPrice").click(function(){
			SearchAssortimentPriceForDbf();
		});

		$("#CancelAssortimentPrice").click(function(){
			CancelAssortimentPriceForDbf();
		});


		$("input[type=checkbox].activate").click(function() {
			var root = $($(this).parents("td").get(0)).siblings("td");
			if (this.checked)
				search(root);
			else
				cancel(root);
		});

		$("input[type=button].cancel-search").live("click", function() {
			cancel($($(this).parents("td").get(0)));
		});

		$("input[type=button].search").live("click", function() {
			var url = $(this).data("url");
			var root = $($(this).parents("div.search").get(0));
			var rootRow = $(root.parents("tr").get(0));
			var term = root.find("input[type=text].term").val();
			$.ajax({
				url: url,
				data: {"text": term},
				cache: false,
				success: function (data) {
					if (data.length == 0) {
						root.find("input[type=button].search").css("disabled", "");
						message(root, "Ничего не найдено.", "error");
						return;
					}
					root.children().remove();
					rootRow.find(".settings").css("display", "");
					var select = $("<select>")
					$.each(data, function () {
						select.append($("<option>").attr("value", this.id).text(this.name));
					});
					select.change(function () {
						rootRow.find("input[type=hidden]").val($(this).val());
					});
					rootRow.find("input[type=hidden]").val(select.val());
					root.append(select);
				},
				error: function (xhr, textStatus, error) {
					message(root, "Произошла ошибка. Попробуйте еще раз.", "error");
				}
			});
			root.find("input[type=button].search").css("disabled", "disabled");
			message(root, "Идет поиск...");
		});
	});

	function message(root, text, clazz)
	{
		root.find(".message").remove();
		root.append($("<span class=message>" + text +"<span>").addClass(clazz));
	}

	function cancel(root)
	{
		var activate = $(root.parents("tr").get(0)).find("input[type=checkbox].activate").get(0);
		activate.checked = false;
		root.find(".search").remove();
		root.find(".value").remove();
		root.find(".settings").css("display", "none");
		root.find("input[type=hidden]").val("");
	}

	function search(root)
	{
		root.find(".value").remove();
		root.find(".settings").css("display", "none");
		var title = "Выберите ассортиментный прайс лист";
		root.prepend(searchTemplate(title, "${siteroot}/Client/SearchAssortmentPrices"));
	}

	function searchTemplate(title, url)
	{
		return $("<div class=search><span>" + title + "</span><br>"
			+ "<input type='text' class=term />"
			+ "<input type='button' class=search value='Найти' />"
			+ "<input type='button' class=cancel-search value='Отмена' />"
			+ "</div>")
			.find("input[type=button]").data("url", url).end();
	}

	function CancelAssortimentPriceForDbf() {
		$("#SearchAssortimentPriceBlock").css("display", "none")
		$("#SearchAssortimentPriceText").css("disabled", "");

		$("#DivForAssortimentPrice").empty();
		$("#drugstore_IsConvertFormat").get(0).checked = false;
	}
	 
	function setNoise(noiseStatus) {
		$("#NotNoiseSupplier").find('select').remove().end();
		if (noiseStatus) {
			var url = "${siteroot}/Client/SuppliersForCostNoising.rails?clientId=${client.Id}";
			$.get(url, function(html){ $("#NotNoiseSupplier").append(html); });
		}
	}

	function SearchAssortimentPriceForDbf() {
		var searchText = $("#SearchAssortimentPriceText").val();
		$.ajax({
			url: "${siteroot}/Client/SearchAssortmentPrices",
			data: {"text": searchText},
			cache: false,
			success: function (data) {
				if (data.length == 0) {
					$("#SearchAssortimentPriceMessage").html("<font color='red'><i>Ничего не найдено</i></font>");
					return;
				}
				$("#SearchAssortimentPriceBlock").css("display", "none")
				$("#SearchAssortimentPriceText").css("disabled", "");
				$("#SearchAssortimentPriceMessage").html("");
				$("#DivForAssortimentPrice").append(data);
				$("#DivForAssortimentPrice select[name='drugstore.BuyingMatrixPrice.Id']").attr("name", "drugstore.AssortimentPrice.Id")
			},
			error: function (xhr, textStatus, error) {
				$("#SearchAssortimentPriceMessage").html("<font color='red'><i>Произошла ошибка. Попробуйте еще раз.</i></font>");
			}
		});
		$("#SearchAssortimentPriceText").css("disabled", "disabled");
		$("#SearchAssortimentPriceMessage").html("<i>Идет поиск...</i>");
	}

</script>

<h2>Конфигурация клиента ${client.Name}</h2>
				  
<div style="padding: 20px 0px 20px 0px; float:left; width: 95%;">
	
	<% if IsDefined("Message"):
			clazz = "notice"
			if message.IsError:
				clazz = "err"
			end	%>

		<div class="flash ${clazz}">
			${Message.MessageText}
		</div>
	<% end %>

	<% if not client.IsClientActive(): %>
		<div class="Warning">
			<p>Клиент отключен</p>
		</div>
	<% end %>
	
	<div class="TwoColumn" style="width: 800px;">
		<div class="block">
			<h3>Операции</h3>
			<form id="NotifySuppliers" method="post" action="NotifySuppliers.rails?clientId=${client.Id}" style="margin:0; padding:0">
				<input style="border-style:groove;" type="submit" value="Отправить уведомления о регистрации поставщикам" />
			</form>
		</div>
		
		<form id="DrugstoreSettingsForm" method=post action="${siteroot}/client/UpdateDrugstore">
			${FormHelper.HiddenField("client.Id")}
			${FormHelper.HiddenField("drugstore.Id")}
			<div class="block" id="commonSettings">
				<h3>Общая настройка</h3>
				<table border="0" style="width: 100%; height: 100%;">
					<tr>
					<td style="width: 50%;">
						<input id="FirmCodeOnlyForClient" name="drugstore.NoiseCosts" onclick="setNoise(this.checked)" type="checkbox" value="true" ${"checked" if drugstore.NoiseCosts } />
						<input type="hidden" name="drugstore.NoiseCosts" value="false" />
						<label for="FirmCodeOnlyForClient">Зашумлять цены</label>
					</td>
					<td>
						<div id="NotNoiseSupplier">
						</div>
					</td>
					</tr>
				<tr>
					<td>
						${FormHelper.CheckboxField("drugstore.IsConvertFormat")}
						<label>Конвертировать накладную в dbf-файл</label>
					</td>
					<td>
						<div>
							<% if drugstore.IsConvertFormat and drugstore.AssortimentPrice: %>
								Ассортиментный прайс: ${drugstore.AssortimentPrice.Supplier.Name} - ${drugstore.AssortimentPrice.Name}
							<% end %>
						</div>
					</td>
				</tr>
				<tr><td colspan="2">
				<input type="checkbox" name="client.IsHiddenForProducer" value="true" ${"checked" if client.IsHiddenForProducer } />
				<input type="hidden" name="client.IsHiddenForProducer" value="false" />
				Скрыть клиента в интефрейсе поставщика<br />
				${app.Edit("drugstore.AllowDelayOfPayment")}<br>
				${app.Edit("drugstore.ServiceClient")}<br>
				${app.Edit("drugstore.IgnoreNewPrices")}<br>
				${app.Edit("drugstore.IgnoreNewPriceForUser")}<br>
				${app.Edit("drugstore.CalculateLeader")}<br><br>
				
<% 
	component SettingCheckbox, { "TypeName" : "AdminInterface.Models.DrugstoreSettings", "InstanceName" : "drugstore", "Header" : "AnalitF",
		"Checkboxes" : { 
			"SendWaybillsFromClient" : drugstore.SendWaybillsFromClient,
			"ShowAdvertising" : drugstore.ShowAdvertising,
			"SendRetailMarkup": drugstore.SendRetailMarkup,
			"ParseWaybills": drugstore.ParseWaybills,
			"EnableImpersonalPrice" : drugstore.EnableImpersonalPrice,
			"EnableSmartOrder" : drugstore.EnableSmartOrder }
	}

	component SettingCheckbox, { "TypeName" : "AdminInterface.Models.DrugstoreSettings", "InstanceName" : "drugstore", "Header" : "AnalitOnline",
		"Checkboxes" : { "ManualComparison" : drugstore.ManualComparison, "ShowNewDefecture" : drugstore.ShowNewDefecture}
	}

	component SettingCheckbox, { "TypeName" : "AdminInterface.Models.DrugstoreSettings", "InstanceName" : "drugstore", "Header" : "Недельный заказ",
		"Checkboxes" : { "CheckWeeklyOrdersSum" : drugstore.CheckWeeklyOrdersSum }
	}
%>
				Максимальный недельный заказ:
				<input type="text" name="drugstore.MaxWeeklyOrdersSum" value="${drugstore.MaxWeeklyOrdersSum}" /><br />
				</td></tr>
				<tr>
					<td>
						${FormHelper.CheckboxField("drugstore.EnableBuyingMatrix", {"class" : "activate"})}
						<label>Подключить матрицу закупок</label>
					</td>
					<td>
						${FormHelper.HiddenField("drugstore.BuyingMatrixPrice.Id")}
						<% if drugstore.BuyingMatrixPrice: %>
							<div class=value>
								${drugstore.BuyingMatrixPrice.Supplier.Name} - ${drugstore.BuyingMatrixPrice.Name}
							</div>
						<% end %>
						<div class=settings ${"style='display:none'" if not drugstore.BuyingMatrixPrice}>
							${app.Edit("drugstore.BuyingMatrixType")}
							${app.Edit("drugstore.WarningOnBuyingMatrix")}
						</div>
					</td>
				</tr>
				<tr>
					<td>
						${FormHelper.CheckboxField("drugstore.EnableOfferMatrix", {"class" : "activate"})}
						<label>Подключить матрицу предложений</label>
					</td>
					<td>
						${FormHelper.HiddenField("drugstore.OfferMatrixPrice.Id")}
						<% if drugstore.OfferMatrixPrice: %>
							<div class=value>
								${drugstore.OfferMatrixPrice.Supplier.Name} - ${drugstore.OfferMatrixPrice.Name}
							</div>
						<% end %>
						<div class=settings ${"style='display:none'" if not drugstore.OfferMatrixPrice}>
							${app.Edit("drugstore.OfferMatrixType")}<br><br>
							<h4 style="border:none; color:Black;">Поставщики исключения</h4>
							<table id=excludes class=editable>
								<tr>
									<td><input type=button class=add value=Добавить></td>
									<th></th>
								</tr>
								<% for i, supplier in enumerate(drugstore.OfferMatrixExcludes): %>
								<tr>
									<td>
										<input type=button value=Удалить class=delete>
									</td>
									<td>
										${FormHelper.HiddenField("drugstore.OfferMatrixExcludes[${i}].Id")}
										${supplier.Name}
									</td>
								</tr>
								<% end %>
							</table>
						</div>
					</td>
				</tr>
				</table>
			</div>

			<div class="block">
				<h3>Региональная настройка</h3>
				<% OutputSubView("/SubViews/Regions") %>
			</div>

			<div class=save>
				<input type=submit value="Сохранить">
			</div>
			
		</form>
	</div>
</div>
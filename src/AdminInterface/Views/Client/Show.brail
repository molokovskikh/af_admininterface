 <% component Bubble, {"bredcrumbs" : [("Поиск пользователей", "${siteroot}/users/search"), 
									  ("Информация о клиенте", "")]} %>
<script type="text/javascript" src="${siteroot}/JavaScript/jquery.validate.min.js"></script>
<script type="text/javascript" src="${siteroot}/JavaScript/messages_ru.js"></script>

<script>
	$(function () {

		$("form#MessagesForm").validate({
			rules: {
				"message": "required"
			}
		});

		$("#ReseteUin").validate();
		$("#ChangePayer").validate();

		$("#ChangePayer select.result").change(function () {
			var url = "${siteroot}/Client/GetPayerOrgs";
			var root = $($(this).parents(".result").get(0));
			$.ajax({
				url: url,
				data: { "id": $(this).val() },
				cache: false,
				success: function (data) {
					$(this).css("disabled", "");
					root.find(".message").remove();

					var select = $("#orgs");
					select.find("option").remove();
					$.each(data, function () {
						select.append($("<option>").attr("value", this.id).text(this.name));
					});
				},
				error: function (xhr, textStatus, error) {
					$(this).css("disabled", "");
					message(root, "Произошла ошибка. Попробуйте еще раз.", "error");
				}
			});
			$(this).css("disabled", "disabled");
			message(root, "Идет поиск...");
		});

		$("#ChangePayer input[type=button].search").click(function () {
			var url = "${siteroot}/Client/SearchPayer";
			var root = $($(this).parents(".search").get(0));
			var term = root.find("input[type=text].term").val();
			$.ajax({
				url: url,
				data: { "text": term },
				cache: false,
				success: function (data) {
					root.find(".message").remove();
					if (data.length == 0) {
						root.find("input[type=button].search").css("disabled", "");
						message(root, "Ничего не найдено.", "error");
						return;
					}
					root.hide();
					var result = root.siblings(".result");
					var select = result.find("select.result");
					select.find("option").remove();
					$.each(data, function () {
						select.append($("<option>").attr("value", this.id).text(this.name));
					});
					select.change();
					result.show();
				},
				error: function (xhr, textStatus, error) {
					root.find("input[type=button].search").css("disabled", "");
					message(root, "Произошла ошибка. Попробуйте еще раз.", "error");
				}
			});
			root.find("input[type=button].search").css("disabled", "disabled");
			message(root, "Идет поиск...");
		});

		$("#ChangePayer input[type=button].cancel").click(function () {
			$(this).parents(".result").hide().siblings(".search").show();
		});
	});

	function message(root, text, clazz) {
		root.find(".message").remove();
		root.append($("<span class=message>" + text + "<span>").addClass(clazz));
	}

</script>

<style>
	.InfoRow
	{
		height: 20px;
	}
	
	input 
	{
		border-style:groove;
	}
	
	textarea
	{
		border-style:groove;
	}
	
	input[type='text']
	{
		width: 70%;
	}

	span.message
	{
		display:block;
		clear:both;
		font-style:italic;
	}

	span.message.error
	{
		color:Red;
	}
</style>
	
<h2>Клиент ${client.Name}, Код ${client.Id}</h2>

<div style="padding: 20px 0px 20px 0px; float:left; width: 95%;">

	<% if not client.IsClientActive(): %>
	<div class="Warning">
		<p>Клиент отключен</p>
	</div>
	<% end %>

	<div class="TwoColumn">

		<div class=block>
			<ul class="navigation-menu">
				<li>
					<a ${"href=${siteroot}/Client/${client.Id}/Settings" if admin.ManageDrugstore}>Настройка</a>
				</li>
				<li>
					<a href="${siteroot}/Logs/UpdateLog?clientCode=${Client.Id}" target="_blank">История обновлений</a>
				</li>
				<li>
					<a href="${siteroot}/Logs/Documents?filter.Client.Id=${Client.Id}" target="_blank">История документов</a>
				</li>
				<li>
					<a href="${siteroot}/Logs/Orders?filter.Client.Id=${client.Id}" target="_blank">История заказов</a>
				</li>
			</ul>
		</div>

		<div class=block>
			<h3>Операции</h3>
			<form id=ReseteUin method=post action=ResetUin style="margin:0; padding:0">
				<input type=hidden name=clientCode value=${Client.Id} />
				<% haveUin = Client.HaveUin() %>
				<% if haveUin: %>
					Причина:<input class=required style="border-style:groove;" type=text name=reason/>
				<% else: %> 
					<span style="color:Green;">Идентификатор не присвоен</span>
				<% end %>
				<input style="border-style:groove;" type=submit ${"disabled" if not haveUin } value="Сбросить УИН" />
			</form>
		</div>

		<div class=block>
			<form id=ChangePayer method=post action=ChangePayer>
				${FormHelper.HiddenField("clientId", client.Id)}
				<h3>Изменение плательщика</h3>
				<% if client.CanChangePayer: %>
				<div class=search>
					<input type=text class=term class=required>
					<input type=button class=search value="Найти">
				</div>
				<div class=result style="display:none;">
					<label>Выберете плательщика:</label>
					<select name=payerId class=result></select>
					<br>
					<label>Выберете Юр.Лицо:</label>
					<select name=orgId id=orgs></select>
					<br>
					<input type=submit value="Изменить">
					<input type=button class=cancel value="Отменить">
				</div>
				<% else: %>
				<p>Плательщик может быть изменен только если клиенту присвоен только один плательщик и с плательщиком связано только одно ют.лицо</p>
				<% end %>
			</form>
		</div>

		<div class=block>
			<div class=contextual>
				<a class="icon icon-add" href="${siteroot}/users/add?clientId=${client.Id}">Новый пользователь</a>
			</div>
			<h3>Пользователи</h3>
			<table style="width:100%;" id=users>
				<tr valign="top" align="left">
					<th>${app.Sortable("Код пользователя", "Users.Id")}</th>
					<th>${app.Sortable("Имя пользователя", "Users.Login")}</th>
					<th>Комментарий</th>
					<th>Последнее использование сервисов</th>
				</tr>
				<% for user in users: %>
					<% userInfo = usersInfo[user.Login] %>
					<tr>
						<td><a href="${siteroot}/users/${user.Id}/edit" class="${'Disabled' if not user.Enabled}">${user.Id}</a></td>
						<td class="${"LockedUser" if userInfo.IsLoginExists and userInfo.IsLocked} ${"DisabledInAd" if userInfo.IsLoginExists and userInfo.IsDisabled} ${"NotExistsUser" if not userInfo.IsLoginExists} ${'DisabledByBilling' if not user.Enabled}">
							<a href="${siteroot}/users/${user.Id}/edit"">${user.Login}</a>
						</td>
						<td>${user.Name}</td>
						<td>${user.Logs.GetLastServicesUsage()}</td>
					</tr>
				<% end %>
			</table>
		</div>

		<div class=block>
			<h3>Плательщики</h3>
			<% for payer in client.Payers: %>
				${app.LinkTo(payer)}<br>
			<% end %>
		</div>

		<div class=block>
			<h3>Общая информация</h3>
			<div>
				<% if not client.Registration: %>
				Регистратор не указан, дата регистрации неизвестна
				<% elif not client.Registration.GetRegistrant(): %>
				Регистратор не указан, дата регистрации ${client.Registration.RegistrationDate}
				<% else: %>
				Зарегистрирован пользователем ${client.Registration.GetRegistrant().ManagerName}, дата регистрации ${client.Registration.RegistrationDate}
				<% end %>
			</div>
			<form action="Update" method=post style="padding:0; margin:0;">
				<div>
					${FormHelper.HiddenField("client.Id")}
					<p>
						Полное наименование<br>
						${FormHelper.TextField("client.FullName")}
					</p>
					<p>
						Краткое наименование<br>
						${FormHelper.TextField("client.Name")}
					</p>
				</div>
				<div>
					<input type=submit value="Сохранить" />
				</div>
			</form>
		</div>
		
		<div class=block>
			<div class=contextual>
				<a href="${siteroot}/deliveries/add?clientId=${client.Id}" class="icon icon-add">Новый адрес доставки</a>
			</div>
			<h3>Адреса доставки</h3>
			<% if addresses.Count: %>
				<table>
					<tr>
						<th>${app.Sortable("Адрес", "Addresses.Value")}</th>
						<th>${app.Sortable("Юр.лицо", "Addresses.LegalName")}</th>
					</tr>
					<% for i, address in enumerate(addresses): %>
						<tr>
							<td>
								${app.LinkTo(address, "Edit")}
							</td>
							<td>
								${address.LegalEntity.Name}
							</td>
						</tr>
					<% end %>
				</table>
			<% end %>
		</div>
		
		<%
			component ContactViewer, {"ContactGroups" : ContactGroups}:
				section ContactGroupHeaderLink:
				%>
					<a href='../Contact/EditContactGroup?contactGroupId=${ContactGroupId}' Target="_blank" >${ContactGroupName}</a>
				<%
				end
				section Person:
				%>
					<a href='../Contact/EditPerson?personId=${PersonId}' target='_blank'>${PersonName}</a>
				<%
				end
			end
		%>
		
		<div>
			<h4 style="margin-bottom:0">Неопознанные звонки:</h4>
			<table id="UnknownPhones" class="DataTable"	>
			<% if CallLogs.Length == 0: %>
				<tr><td class="EmptyData">Нет звонков</td></tr>
			<% else: %>
				<% for i, call in enumerate(CallLogs): %>
				<tr class="${ViewHelper.GetRowStyle(i)}">
					<td>
						<form action="BindPhone?clientcode=${client.Id}&phone=${call}" method=post>
							<input type=submit value="Связать" />
						</form>
					</td>
					<td>${call}</td>
				</tr>
				<% end %>
			<% end %>
			</table>
		</div>
		<% OutputSubView("LegendView") %>
	</div>
	
	<div class="TwoColumn" style="margin-left: 10px">
		<form action=SendMessage method="post" id="MessagesForm">
		<div class="block">
			<h3>Сообщения пользователя</h3>
			<input type=hidden value=${client.Id} name=clientCode />
			Новое сообщение:
			<textarea style="height: 150px; width:100%;" class="reuired" name="message"></textarea>
			<br />
			<input type=submit value="Принять" class="RightButton"/>
			<p>
				<% if messages.Count: %>
				<table class="DataTable HighLightCurrentRow" id="ClientMessagesTable" style="text-align:left">
					<tr>
						<th>${app.Sortable("Дата", "Messages.WriteTime")}</th>
						<th>${app.Sortable("Оператор", "Messages.Operator")}</th>
						<th>${app.Sortable("Пользователь", "Messages.Login")}</th>
						<th>Событие</th>
					</tr>
					<% for i, log in enumerate(messages): %>
					<tr class="${ViewHelper.GetRowStyle(i)} ${"DisabledClient" if log.IsStatusChange()}"">
						<td>${log.WriteTime}</td>
						<td>${log.Operator}</td>
						<td>${log.User.GetLoginOrName() if log.User != null}</td>
						<td>${ViewHelper.FormatMessage(HttpUtility.HtmlEncode(log.Message))}</td>
					</tr>
					<% end %>
				</table>
				<% else: %>
				<table class="DataTable">
					<tr class="EmptyData">
						<td>Сообщений нет.</td>
					</tr>
				</table>
				<% end %>
			</p>
		</div>
		</form>
	</div>
</div>
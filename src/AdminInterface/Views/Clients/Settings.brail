<% component Bubble, {@bredcrumbs : [("Поиск пользователей", "${siteroot}/users/search"), client]} %>

<% component CaptureFor, {@id : @Title}: %>
	Конфигурация клиента ${client.Name}
<% end %>

${app.Asset("Documents.css")}
${app.Asset("alt.form.css")}
${app.Asset("client.settings.js")}
${app.Asset("search.editor.v2.js")}
${app.Asset("smart.order.settings.js")}

<% OutputSubView("/Shared/JsTemplates/search.editor.v2") %>

<div style="padding: 20px 0px 20px 0px; float:left; width: 95%;">

	<% if client.Disabled: %>
		<div class="Warning">
			<p>Клиент отключен</p>
		</div>
	<% end %>

	<div style="width: 900px;">

		<form id="NotifySuppliers" method="post" action="NotifySuppliers?clientId=${client.Id}"></form>

		<form id="DrugstoreSettingsForm" method=post action="${siteroot}/clients/UpdateDrugstore">
			${FormHelper.HiddenField("client.Id")}
			${FormHelper.HiddenField("drugstore.Id")}
			${FormHelper.HiddenField("drugstore.SmartOrderRules.Id")}
			<div class="block">
				<h3>Общая настройка</h3>
				<table border="0" style="width: 100%; height: 100%;">
					<tr>
						<td style="width: 50%;">
							${app.Edit("drugstore.NoiseCosts", {@class: @activate})}
						</td>
						<td>
							${app.SearchEdit("drugstore.NoiseCostExceptSupplier",
								{"data-search-title":"Кроме",
									"data-search-url": "/clients/${client.Id}/SearchSuppliers",
									"data-depend-on": "drugstore_NoiseCosts"})}
							${app.GetValidationError("drugstore.NoiseCostExceptSupplier")}
						</td>
					</tr>
					<tr>
						<td>
							${app.Edit("drugstore.IsConvertFormat", {@class: @activate})}
							<% if drugstore.IsConvertFormat and drugstore.AssortimentPrice is null: %>
							<div class="redText">
								* не указан ассортиментный прайс-лист для конвертации
							</div>
							<% end %>
						</td>
						<td>
							${app.SearchEdit("drugstore.AssortimentPrice",
								{"data-search-editor": "assortmentPrice",
									"data-depend-on": "drugstore_IsConvertFormat"})}
							${app.GetValidationError("drugstore.AssortimentPrice")}

							<div class="settings" data-depend-on="drugstore_IsConvertFormat">
								${app.Label("drugstore.WaybillConvertFormat")}
								${app.Edit("drugstore.WaybillConvertFormat")}
							</div>
						</td>
					</tr>
					<tr>
						<td colspan="2">
							${app.Edit("drugstore.IsHiddenFromSupplier")}<br>
							${app.Edit("drugstore.AllowDelayOfPayment")}<br>
							${app.Edit("client.FtpIntegration")}<br>
							${app.Edit("drugstore.ServiceClient")}<br>
							${app.Edit("drugstore.IgnoreNewPrices")}<br>
							${app.Edit("drugstore.IgnoreNewPriceForUser")}<br>
							${app.Edit("drugstore.CalculateLeader")}<br>
							${app.Edit("drugstore.AllowAnalitFSchedule")}<br>
							${app.Edit("drugstore.DebugOrders")}<br>
							${app.Label("drugstore.ProtekWaybillSavingType")}
							${app.Edit("drugstore.ProtekWaybillSavingType")}<br>
							${app.Edit("drugstore.NotifyAwaitedOrders")}<br>
							${app.Label("drugstore.ProtekIntegrationFrom")}<br>
							${app.Edit("drugstore.ProtekIntegrationFrom")}<br>

							<h4>AnalitF</h4>
							${app.Edit("drugstore.SendWaybillsFromClient")}<br>
							${app.Edit("drugstore.ShowAdvertising")}<br>
							${app.Edit("drugstore.SendRetailMarkup")}<br>
							${app.Edit("drugstore.EnableImpersonalPrice")}<br>
							${app.Edit("drugstore.ShowCertificatesWithoutRefSupplier")}<br>

							<h4>Недельный заказ</h4>
							${app.Edit("drugstore.CheckWeeklyOrdersSum")}<br>
							${app.Label("drugstore.MaxWeeklyOrdersSum")}
							${app.Edit("drugstore.MaxWeeklyOrdersSum")}
						</td>
					</tr>
				</table>
			</div>
			<div class="block">
				${app.Edit("drugstore.EnableSmartOrder", {"data-bind" : "read: enableSmartOrder, checked: enableSmartOrder"})}
				<div data-bind="allowBindings: false, visible: enableSmartOrder">
					${app.SearchEditV2("drugstore.SmartOrderRules.AssortimentPriceCode", {
						"data-search-editor": @assortmentPrice,
						"data-search-title": "Выберите ассортиментный прайс лист"})}
					${app.GetValidationError("drugstore.SmartOrderRules.AssortimentPriceCode")}
				</div>
				<div data-bind="allowBindings: false, visible: enableSmartOrder">
					${app.SearchEditV2("drugstore.SmartOrderRules.ParseAlgorithm", {
						"data-search-editor": @parser,
						"data-search-title": "Выберите парсер"})}
					${app.GetValidationError("drugstore.SmartOrderRules.ParseAlgorithm")}
					<div class="desc">
						Настройка правил разбора производится для источников DbfSource, ExcelSource, TextSource. <br>
						Для всех остальных источников правила разбора игнорируются
					</div>
				</div>
				<div data-bind="visible: isConfigurable">
					<h4>Настройка разбора файла</h4>
					<div class="form-block">
						${app.Label("drugstore.SmartOrderRules.Loader")}
						${app.Edit("drugstore.SmartOrderRules.Loader", {"data-bind": "read: loader, value: loader"})}
					</div>
					<div class="form-block" data-bind="visible: isColumnSeparatorAvailable">
						${app.Label("drugstore.SmartOrderRules.ColumnSeparator", " (для обозначение табулятора используется последовательность символов \"\\t\")")}
						${app.Edit("drugstore.SmartOrderRules.ColumnSeparator")}
					</div>
					<div class="form-block" data-bind="visible: isStartLineAvailable">
						${app.Label("drugstore.SmartOrderRules.StartLine", " (нумерация начинается с \"0\")")}
						${app.Edit("drugstore.SmartOrderRules.StartLine")}
					</div>
					<div class="form-block" data-bind="visible: isCodePageAvailable">
						${app.Label("drugstore.SmartOrderRules.CodePage")}
						${FormHelper.Select("drugstore.SmartOrderRules.CodePage", encodings, {
							@firstoption: "Определить автоматически",
							@firstoptionvalue: "",
							@text: "HeaderName",
							@value: "CodePage"})}
					</div>
					<div class="form-block">
						<table class="tablelike-editor">
							<tr>
								<td>${app.Label("drugstore.SmartOrderRules.CodeColumn",
									" (для текстовых и excel файлов колонки задаются с помощью номера, начиная с \"0\", а для dbf-файлов вписываются имена соответствующих полей)")}</td>
								<td>${app.Label("drugstore.SmartOrderRules.CodeCrColumn")}</td>
								<td>${app.Label("drugstore.SmartOrderRules.ProductColumn")}</td>
								<td>${app.Label("drugstore.SmartOrderRules.ProducerColumn")}</td>
								<td>${app.Label("drugstore.SmartOrderRules.QuantityColumn")}</td>
							</tr>
							<tr>
								<td>
									${app.Edit("drugstore.SmartOrderRules.CodeColumn")}
								</td>
								<td>
									${app.Edit("drugstore.SmartOrderRules.CodeCrColumn")}
								</td>
								<td>
									${app.Edit("drugstore.SmartOrderRules.ProductColumn")}
								</td>
								<td>
									${app.Edit("drugstore.SmartOrderRules.ProducerColumn")}
								</td>
								<td>
									${app.Edit("drugstore.SmartOrderRules.QuantityColumn")}
								</td>
							</tr>
						</table>
						<div>
							<div>
								${app.Label("drugstore.SmartOrderRules.SupplierDeliveryIdColumn")}
								<div>
									сопоставляется с полем "код доставки" в личном кабинете по прайс-листу для автозаказа,
									выбранные адреса доставки используются для формирования заявок,
									таким образом на основании одной дефектуры можно сформировать заявки на несколько адресов доставки
								</div>
								${app.Edit("drugstore.SmartOrderRules.SupplierDeliveryIdColumn")}
							</div>
							<div>
								${app.Label("drugstore.SmartOrderRules.ServiceFields")}
								<div>
									перечисляются через запятую и отображаются в отчете по обработке дефектуры
								</div>
								${app.Edit("drugstore.SmartOrderRules.ServiceFields")}
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="block">
				<table>
				<tr>
					<td>
						${app.Edit("drugstore.EnableBuyingMatrix", {@class : @activate})}
					</td>
					<td>
						<div>
							${app.SearchEdit("drugstore.BuyingMatrixPrice", {"data-search-editor": @searchMatrix, "data-depend-on": "drugstore_EnableBuyingMatrix"})}
							${app.GetValidationError("drugstore.BuyingMatrixPrice")}
						</div>
						<div class=settings data-depend-on="drugstore_EnableBuyingMatrix">
							${app.Edit("drugstore.BuyingMatrixType")}
							${app.Edit("drugstore.BuyingMatrixAction")}
						</div>
					</td>
				</tr>
				<tr>
					<td>
						${app.Edit("drugstore.EnableOfferMatrix", {@class : @activate})}
					</td>
					<td>
						<div>
							${app.SearchEdit("drugstore.OfferMatrixPrice", {"data-search-editor": @searchMatrix, "data-depend-on": "drugstore_EnableOfferMatrix"})}
							${app.GetValidationError("drugstore.OfferMatrixPrice")}
						</div>
						<div class=settings data-depend-on="drugstore_EnableOfferMatrix">
							${app.Edit("drugstore.OfferMatrixType")}
							${app.Edit("drugstore.OfferMatrixAction")}
							<div>
								<h4 style="border:none; color:Black;">Поставщики исключения</h4>
								<table id=excludes class=editable>
									<tr>
										<td><input type=button class=add value=Добавить></td>
										<th></th>
									</tr>
									<% for i, supplier in enumerate(drugstore.OfferMatrixExcludes): %>
									<tr>
										<td>
											<input type=button value=Удалить class=delete>
										</td>
										<td>
											${FormHelper.HiddenField("drugstore.OfferMatrixExcludes[${i}].Id")}
											${supplier.Name}
										</td>
									</tr>
									<% end %>
								</table>
							</div>
						</div>
					</td>
				</tr>
				</table>
			</div>

			<div class="block">
				<h3>Операции</h3>
				<input type="button" onclick="NotifySuppliers()" value="Отправить уведомления о регистрации поставщикам" />
				<input type="submit" name="ResetReclameDate" value="Сбросить дату рекламы" />
			</div>

			<div class="block">
				<h3>Региональная настройка</h3>
				${app.GetValidationError("client.MaskRegion")}
				<% OutputSubView("/SubViews/Regions") %>
			</div>

			<div class=save>
				<input type=submit value="Сохранить">
			</div>

		</form>
	</div>
</div>
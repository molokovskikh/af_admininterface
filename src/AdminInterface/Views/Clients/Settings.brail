${app.Asset("search.editor.js")}

<% component Bubble, {@bredcrumbs : [("Поиск пользователей", "${siteroot}/users/search"), client]} %>

<% component CaptureFor, {@id : @Title}: %>
	Конфигурация клиента ${client.Name}
<% end %>

<style>
	div.search span.message
	{
		display:block;
		clear:both;
		font-style:italic;
	}
	
	div.search span.message.error
	{
		color:Red;
	}
</style>

<script>
	$(function () {

		$("#excludes").data("template", function() {
			return $("<tr>")
				.append($("<td>").append($("<input type=button value=Удалить>").addClass("delete")))
				.append($("<td>")
					.append(searchTemplate("Выберете поставщика", "${siteroot}/Client/${client.Id}/SearchSuppliers"))
					.append("<input type=hidden name=drugstore.OfferMatrixExcludes[0].Id>"));
		});

		<% if drugstore.NoiseCosts: %>
			setNoise(true);
		<% end %>

		$("input[type=checkbox].activate").click(function() {
			var root = $($(this).parents("td").get(0)).siblings("td");
			if (this.checked)
				search(root);
			else
				cancel(root);
		});
	});

	function cancel(root) {
		var activate = $(root.parents("tr").get(0)).find("input[type=checkbox].activate").get(0);
		activate.checked = false;
		root.find(".search").remove();
		root.find(".value").remove();
		root.find(".settings").css("display", "none");
		root.find("input[type=hidden]").val("");
	}

	function search(root) {
		root.find(".value").remove();
		root.find(".settings").css("display", "none");
		var title = "Выберите ассортиментный прайс лист";
		root.prepend(searchTemplate(title, "${siteroot}/Client/SearchAssortmentPrices"));
	}

	function setNoise(noiseStatus) {
		$("#NotNoiseSupplier").find('select').remove().end();
		if (noiseStatus) {
			var url = "${siteroot}/Client/SuppliersForCostNoising?clientId=${client.Id}";
			$.get(url, function(html){ $("#NotNoiseSupplier").append(html); });
		}
	}
</script>

<div style="padding: 20px 0px 20px 0px; float:left; width: 95%;">

	<% if not client.IsClientActive(): %>
		<div class="Warning">
			<p>Клиент отключен</p>
		</div>
	<% end %>
	
	<div style="width: 800px;">
		<div class="block">
			<h3>Операции</h3>
			<form id="NotifySuppliers" method="post" action="NotifySuppliers?clientId=${client.Id}">
				<input type="submit" value="Отправить уведомления о регистрации поставщикам" />
			</form>
		</div>
		
		<form id="DrugstoreSettingsForm" method=post action="${siteroot}/client/UpdateDrugstore">
			${FormHelper.HiddenField("client.Id")}
			${FormHelper.HiddenField("drugstore.Id")}
			<div class="block" id="commonSettings">
				<h3>Общая настройка</h3>
				<table border="0" style="width: 100%; height: 100%;">
					<tr>
					<td style="width: 50%;">
						<input id="FirmCodeOnlyForClient" name="drugstore.NoiseCosts" onclick="setNoise(this.checked)" type="checkbox" value="true" ${"checked" if drugstore.NoiseCosts } />
						<input type="hidden" name="drugstore.NoiseCosts" value="false" />
						<label for="FirmCodeOnlyForClient">Зашумлять цены</label>
					</td>
					<td>
						<div id="NotNoiseSupplier">
						</div>
					</td>
					</tr>
				<tr>
					<td>
						${app.Edit("drugstore.IsConvertFormat", {@class: @activate})}
					</td>
					<td>
						${FormHelper.HiddenField("drugstore.AssortimentPrice.Id")}
						<div class=value>
							<% if drugstore.IsConvertFormat and drugstore.AssortimentPrice: %>
								Ассортиментный прайс: ${drugstore.AssortimentPrice.Supplier.Name} - ${drugstore.AssortimentPrice.Name}
							<% end %>
						</div>
					</td>
				</tr>
				<tr><td colspan="2">
				<input type="checkbox" name="client.IsHiddenForProducer" value="true" ${"checked" if client.IsHiddenForProducer } />
				<input type="hidden" name="client.IsHiddenForProducer" value="false" />
				Скрыть клиента в интефрейсе поставщика<br />
				${app.Edit("drugstore.AllowDelayOfPayment")}<br>
				${app.Edit("drugstore.ServiceClient")}<br>
				${app.Edit("drugstore.IgnoreNewPrices")}<br>
				${app.Edit("drugstore.IgnoreNewPriceForUser")}<br>
				${app.Edit("drugstore.CalculateLeader")}<br>
				${app.Edit("drugstore.AllowAnalitFSchedule")}<br>
				<br>
				
<% 
	component SettingCheckbox, { "TypeName" : "AdminInterface.Models.DrugstoreSettings", "InstanceName" : "drugstore", "Header" : "AnalitF",
		"Checkboxes" : { 
			"SendWaybillsFromClient" : drugstore.SendWaybillsFromClient,
			"ShowAdvertising" : drugstore.ShowAdvertising,
			"SendRetailMarkup": drugstore.SendRetailMarkup,
			"ParseWaybills": drugstore.ParseWaybills,
			"EnableImpersonalPrice" : drugstore.EnableImpersonalPrice,
			"EnableSmartOrder" : drugstore.EnableSmartOrder,
			"ShowCertificatesWithoutRefSupplier" : drugstore.ShowCertificatesWithoutRefSupplier }
	}

	component SettingCheckbox, { "TypeName" : "AdminInterface.Models.DrugstoreSettings", "InstanceName" : "drugstore", "Header" : "AnalitOnline",
		"Checkboxes" : { "ManualComparison" : drugstore.ManualComparison, "ShowNewDefecture" : drugstore.ShowNewDefecture}
	}

	component SettingCheckbox, { "TypeName" : "AdminInterface.Models.DrugstoreSettings", "InstanceName" : "drugstore", "Header" : "Недельный заказ",
		"Checkboxes" : { "CheckWeeklyOrdersSum" : drugstore.CheckWeeklyOrdersSum }
	}
%>
				Максимальный недельный заказ:
				<input type="text" name="drugstore.MaxWeeklyOrdersSum" value="${drugstore.MaxWeeklyOrdersSum}" /><br />
				</td></tr>
				<tr>
					<td>
						${FormHelper.CheckboxField("drugstore.EnableBuyingMatrix", {"class" : "activate"})}
						<label>Подключить матрицу закупок</label>
					</td>
					<td>
						${FormHelper.HiddenField("drugstore.BuyingMatrixPrice.Id")}
						<% if drugstore.BuyingMatrixPrice: %>
							<div class=value>
								${drugstore.BuyingMatrixPrice.Supplier.Name} - ${drugstore.BuyingMatrixPrice.Name}
							</div>
						<% end %>
						<div class=settings ${"style='display:none'" if not drugstore.BuyingMatrixPrice}>
							${app.Edit("drugstore.BuyingMatrixType")}
							${app.Edit("drugstore.WarningOnBuyingMatrix")}
						</div>
					</td>
				</tr>
				<tr>
					<td>
						${FormHelper.CheckboxField("drugstore.EnableOfferMatrix", {"class" : "activate"})}
						<label>Подключить матрицу предложений</label>
					</td>
					<td>
						${FormHelper.HiddenField("drugstore.OfferMatrixPrice.Id")}
						<% if drugstore.OfferMatrixPrice: %>
							<div class=value>
								${drugstore.OfferMatrixPrice.Supplier.Name} - ${drugstore.OfferMatrixPrice.Name}
							</div>
						<% end %>
						<div class=settings ${"style='display:none'" if not drugstore.OfferMatrixPrice}>
							${app.Edit("drugstore.OfferMatrixType")}<br><br>
							<h4 style="border:none; color:Black;">Поставщики исключения</h4>
							<table id=excludes class=editable>
								<tr>
									<td><input type=button class=add value=Добавить></td>
									<th></th>
								</tr>
								<% for i, supplier in enumerate(drugstore.OfferMatrixExcludes): %>
								<tr>
									<td>
										<input type=button value=Удалить class=delete>
									</td>
									<td>
										${FormHelper.HiddenField("drugstore.OfferMatrixExcludes[${i}].Id")}
										${supplier.Name}
									</td>
								</tr>
								<% end %>
							</table>
						</div>
					</td>
				</tr>
				</table>
			</div>

			<div class="block">
				<h3>Региональная настройка</h3>
				<% OutputSubView("/SubViews/Regions") %>
			</div>

			<div class=save>
				<input type=submit value="Сохранить">
			</div>
			
		</form>
	</div>
</div>
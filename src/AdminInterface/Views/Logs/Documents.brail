<% component CaptureFor, {"id" : "Title"}: %>
	История документов
<% end %>

${app.BeginFormFor("filter")}
${FormHelper.HiddenField("filter.Supplier.Id")}
${FormHelper.HiddenField("filter.Client.Id")}
${FormHelper.HiddenField("filter.User.Id")}
${app.FilterFor("filter.Period")}
${app.EndFormFor("filter")}

<script type="text/javascript">

	function ShowDownloadResult(id, url, callerDescription) {
		var isCallerVisible = IsVisible(id, callerDescription)
		HideAll(id, function() {
			if (!isCallerVisible)
				Download(url, id)
		});
	}

	function Hide(id, description, afterFinish) {
		if ($("#" + description + id).length > 0) {
			$("#" + description + id).slideUp(500, function () {
				$("#" + description + "Row" + id).remove();
				afterFinish();
			});
		}
		else {
			afterFinish();
		}
	}

	function HideAll(id, afterFinish) {
	    if (IsVisible(id, "DownloadLog")) {
	        Hide(id, "DownloadLog", afterFinish);
	    }
	    else if (IsVisible(id, "UpdateDetails")) {
	        Hide(id, "UpdateDetails", afterFinish);
	    }
	    else if (IsVisible(id, "DocumentDetails")) {
	        Hide(id, "DocumentDetails", afterFinish);
	    }
	    else {
	        afterFinish();
	    }
	}
	
	function IsVisible(id, description) {
		return $("#" + description + id).length > 0;
	}
	
	function Download(url, id) {
		$.ajax({
			url: url,
			success: function (data) {
				var row = $(data);
				row.insertAfter("#documentFileRow" + id);
				//не работает
				//row.slideDown(500);
				row.css("display", "table-row");
			}
		});
	}
</script>

<div>

	<table class="DataTable">
	<% if logEntities.Count != 0: %>
		<tr>
			<th>Номер документа</th>
			<th>Дата получения</th>
			<th>Тип документа</th>
			<th>Номер поставщика</th>
			<th>Дата документа</th>
			<th>Дата разбора</th>
			<th>От поставщика</th>
			<th>На адрес</th>
			<th>Название файла</th>
			<th>Размер</th>
			<th>Пользователь получивший документ</th>
			<th>Дата отправки</th>
			<th>Комментарий</th>
		</tr>
	<% for i, logEntity in enumerate(logEntities): %>
		<tr class="${ViewHelper.GetRowStyle(i)}" id="documentFileRow${logEntity.Received.Id}">
			<td>${logEntity.Received.Id}</td>
			<td>${logEntity.Received.LogTime}</td>
			<td>
				${BindingHelper.GetDescription(logEntity.Received.DocumentType)}
				<%if logEntity.Received.SendUpdateLogEntity: %>
					(загрузка документов)
				<% end %>
			</td>
			<td>${?logEntity.Received.Document.ProviderDocumentId}</td>
			<td>${?logEntity.Received.Document.DocumentDate}</td>
			<td>${?logEntity.Received.Document.WriteTime}</td>
			<td>${logEntity.Received.FromSupplier.Name}</td>
			<td>${logEntity.Received.Address.Value}</td>
			<td class="${'DocumentNotParsed' if not logEntity.Received.Document and logEntity.Received.SendUpdateLogEntity}">
				<% if logEntity.Received.Document: %>
					<a id="ShowDocumentDetailsLink${logEntity.Received.Id}" href="javascript:void(0);" onclick="return ShowDownloadResult(${logEntity.Received.Id}, 'ShowDocumentDetails?documentLogId=${logEntity.Received.Id}', 'DocumentDetails');">
						!{logEntity.Received.FileName}
					</a>
				<% else: %>
					!{logEntity.Received.FileName}
				<% end %>
			</td>
			<td>
				${ViewHelper.ConvertToUserFriendlySize(logEntity.Received.DocumentSize) if logEntity.Received.DocumentSize}
			</td>
			<td>${logEntity.ForUser.Login}</td>
			<td>${?logEntity.SendedInUpdate.RequestTime}</td>
			<td>
				<pre>!{logEntity.Received.Addition}</pre>
			</td>
		</tr>
	<% end %>
	<% else: %>
		<tr class="EmptyData">
			<td>
				За указанный период документов не найдено
			</td>
		</tr>
	<% end %>
	</table>

</div>
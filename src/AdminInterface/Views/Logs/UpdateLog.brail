<% component Bubble, {"bredcrumbs" : [("Статистика", "")]} %>

<script type="text/javascript" src="${siteroot}/JavaScript/Main.js"></script>
<script type="text/javascript">
	function ShowDownloadResult(id, url, callerDescription)
	{
		//DisableAction(id);
		var isCallerVisible = IsVisible(id, callerDescription)
		HideAll(id, function() {
		    if (!isCallerVisible)
		        Download(url)
		});
	}

	function Hide(id, description, afterFinish)
	{
	    new Effect.SlideUp(description + id, {
	    afterFinish: function() {
	        $(description + "Row" + id).remove();
	        afterFinish();
		}, duration: 0.5 });
	}
	
	function HideAll(id, afterFinish)
	{
		if (IsVisible(id, "DownloadLog"))
		{
			Hide(id, "DownloadLog", afterFinish);
		}
		else
		{
			if (IsVisible(id, "UpdateDetails"))
			{
				Hide(id, "UpdateDetails", afterFinish);
			}
			else
			{
				afterFinish();
			}
		}
	}
	
	function IsVisible(id, description)
	{
		return $(description + id) != null;
	}
	
	function DisableAction(id)
	{
		$("ShowUpdateDetailsLink" + id).onclick = function () { return false; }
		$("ShowLogLink" + id).onclick = function () { return false; }
	}
	
	function Download(url)
	{
		new Ajax.Request(url, { method: 'get' });
	}
</script>

<%  if IsDefined("client"):
        component CaptureFor, {"id" : "Title"}: %>
		    История обновлений клиента ${client.Name}
<%      end %>

	<div class="PageHeader">
		История обновлений клиента ${client.Name}
	</div>

	<% component CaptureFor, {"id" : "PostToServer"}: %>
		${FormHelper.HiddenField("clientCode", client.Id)}
	<% end %>
<%  else: %>
    <% if IsDefined("user"): %>
	    <% component CaptureFor, {"id" : "Title"}: %>
		    История обновлений пользователя ${user.Login}
	    <% end %>

	    <div class="PageHeader">
		    История обновлений пользователя ${user.Login}
	    </div>

	    <% component CaptureFor, {"id" : "PostToServer"}: %>
		    ${FormHelper.HiddenField("userId", user.Id)}
	    <% end %>
	<% end %>
<%end 
    if (not IsDefined("updateType")): 
	    OutputSubView("SelectDateIntervalSubView")
	else:
        accumulative = cast(int, StatisticsType.UpdateNormal) 
	    cumulative = cast(int, StatisticsType.UpdateCumulative)
	    isDataTransferUpdateType = (accumulative == updateType or cumulative == updateType) %>
    <table width="100%">
        <tr align="center"><td><font face="Verdana" size="2"><b>${updateTypeName}</b></font></td></tr>
      <%if IsDefined("regionMask"):
            countClients = 0
	        for logEntity in logEntities:
	            region = logEntity.User.Client.HomeRegion.Id
	            if (region & regionMask) and (region & adminRegionMask) > 0:
	                countClients++
	            end
	        end
		else:
		    countClients = logEntities.Count
		end%>
        <tr align="center"><td style="padding-bottom: 15px"><font face="Verdana" size="2">Клиентов, отвечающих условиям выборки: ${countClients}</font></td></tr>
    </table>        	
<%	
	end
%>

<div>
<form id="updateForm" name="updateForm" action="${siteroot}/Logs/UpdateLog.rails">
	<table class="DataTable">
	    <thead>
<%      if logEntities.Count > 0: %>	
		<tr>
<%          headersList = ["Дата", "Версия"]
            headersColumns = ["RequestTime", "AppVersion"]
            unsortableHeaders = []
            if (not IsDefined("client") and not IsDefined("user")):
                headersList.Add("Регион")
                headersColumns.Add("Region")
            end
            if (IsDefined("client") or IsDefined("updateType")):
                headersList.Add("Пользователь")
                headersColumns.Add("Login")
            end
            if IsDefined("updateType"):
                headersList.Add("Клиент")
                headersColumns.Add("ClientName")
            else:
                headersList.Add("Тип обновления")
                headersColumns.Add("UpdateType")
            end
            if (IsDefined("updateType") and isDataTransferUpdateType) or IsDefined("client") or IsDefined("user"):
                headersList.Add("Размер приготовленных данных")
                headersColumns.Add("ResultSize")
            end
            headersList.Add("Дополнительно")
            headersColumns.Add("Addition")
            if (IsDefined("updateType") and isDataTransferUpdateType) or IsDefined("client") or IsDefined("user"):
                headersList.Add("Лог")
                unsortableHeaders.Add("Лог")
                headersColumns.Add("")
            end %>
            
<%          OutputSubView("/SubViews/SortHeadersSubView",
                {"headers":headersList, "unsortableHeaders": unsortableHeaders, "sortColumnIndex":sortColumnIndex, "formPostBack":'updateForm' }) %>			
		</tr>
		</thead>
		<tbody class="HighLightCurrentRow">
<%          i = 0
			for logEntity in logEntities:
			    region = logEntity.User.Client.HomeRegion.Id
			    if (IsDefined("regionMask") and ((region & regionMask == 0) or (region & adminRegionMask == 0))):
			        continue
			    end
				if logEntity.Commit:
					requestTimeStyle = ""
				else:
					requestTimeStyle = "background-color:#ffa642"
				end %>
		<tr class="${ViewHelper.GetRowStyle(i)}" id="logRow${logEntity.Id}" align="center">
			<td style="${requestTimeStyle};width:1%;">
				${logEntity.RequestTime}
			</td>

			<td>
				${logEntity.AppVersion}
			</td>
			
		  <%if (not IsDefined("client")) and (not IsDefined("user")): %>	
			<td>
			    ${logEntity.User.Client.HomeRegion.Name}
			</td>
		  <%end %>

		  <%if (IsDefined("client") or IsDefined("updateType")): %>
			<td>
				<a title="UserSettings" href="${siteroot}/users/${logEntity.User.Login}/edit">${logEntity.User.GetLoginWithName()}</a>
			</td>
		  <%end %>
		  
		  <%if IsDefined("updateType"): %>
		    <td>
		        <a title="ClientSettings" href="${siteroot}/client/${logEntity.User.Client.Id}">${logEntity.User.Client.Name}</a>
		    </td>
		  <%else: %>  
		    <td>
	        <% if logEntity.IsDataTransferUpdateType():	%>
	            <a id="ShowUpdateDetailsLink${logEntity.Id}" href="javascript:void(0);" onclick="return ShowDownloadResult(${logEntity.Id}, 'ShowUpdateDetails.rails?updateLogEntityId=${logEntity.Id}', 'UpdateDetails');">
	                ${BindingHelper.GetDescription(logEntity.UpdateType)}</a>
		    <% else: %>
			        ${BindingHelper.GetDescription(logEntity.UpdateType)}
		    <% end %>			  
		    </td>  		  
		  <%end %>
		  
		  <%if (IsDefined("updateType")and isDataTransferUpdateType) or IsDefined("client") or IsDefined("user"): %>		  
			    <td>
				    ${ViewHelper.ConvertToUserFriendlySize(logEntity.ResultSize)}
			    </td>    		  
    	  <%end %>
			<td style="text-align:center;">
				${logEntity.Addition}
			</td>
			
		  <%if (IsDefined("updateType")and isDataTransferUpdateType) or IsDefined("client") or IsDefined("user"): %>		  
			    <td>
				    <% if not string.IsNullOrEmpty(logEntity.Log): %>
				    <a id="ShowLogLink${logEntity.Id}" href="javascript:void(0);" onclick="return ShowDownloadResult(${logEntity.Id}, 'ShowDownloadLog.rails?updateLogEntityId=${logEntity.Id}', 'DownloadLog');">
					    Лог
				    </a>
				    <% else: %>
				    -
				    <% end %>
			    </td>	    	  
    	  <%end %>			
		</tr>
	<% 
				i++
			end
		else:
	%>
		<tr class="EmptyData">
			<td style="width:1%;">
				За указанный период клиент не обновлялся
			</td>
		</tr>
	    </tbody>
	</table>		
<%      end %>	

<%      if (logEntities.Count > 0):
            for i,headerName in enumerate(headersColumns): %>
        <input type="hidden" name="headerNames[${i}]" value="${headerName}" />
<%          end
        end %>		
        <input type="hidden" name="sortColumnIndex" id="sortColumnIndex" value="${sortColumnIndex}" />
<%      if IsDefined("regionMask"): %>		        
        <input type="hidden" name="regionMask" value="${regionMask}" />
<%      end %>	        
        <input type="hidden" name="beginDate" id="beginDate" value="${beginDate}"
        <input type="hidden" name="endDate" id="endDate" value="${endDate}" />
<%      if IsDefined("clientCode"): %>	
        <input type="hidden" name="clientCode" id="clientCode" value="${clientCode}" />
<%      end %>
<%      if IsDefined("userId"): %>
        <input type="hidden" name="userId" id="userId" value="${userId}" />
<%      end %>	
<%      if IsDefined("updateType"): %>
        <input type="hidden" name="updateType" id="updateType" value="${updateType}" />
<%      end %>	

</form>	
</div>

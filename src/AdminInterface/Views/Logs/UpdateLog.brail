<% component CaptureFor, {"id" : "Title"}: %>
		Статистика обновлений
<% end %>
<% component Bubble, {"bredcrumbs" : [("Статистика", "")]} %>

<script type="text/javascript" src="${siteroot}/JavaScript/Main.js"></script>
<script type="text/javascript">
	function ShowDownloadResult(id, url, callerDescription) {
		var isCallerVisible = IsVisible(id, callerDescription);
		HideAll(id, function () {
			if (!isCallerVisible)
				Download(url);
		});
	}

	function Hide(id, description, afterFinish)
	{
		new Effect.SlideUp(description + id, {
		afterFinish: function() {
			$(description + "Row" + id).remove();
			afterFinish();
		}, duration: 0.5 });
	}

	function HideAll(id, afterFinish) {
		if (IsVisible(id, "DownloadLog")) {
			Hide(id, "DownloadLog", afterFinish);
		}
		else if (IsVisible(id, "UpdateDetails")) {
			Hide(id, "UpdateDetails", afterFinish);
		}
		else if (IsVisible(id, "DocumentDetails")) {
			Hide(id, "DocumentDetails", afterFinish);
		}
		else {
			afterFinish();
		}
	}
	
	function IsVisible(id, description) {
		return $(description + id) != null;
	}
	
	function DisableAction(id)
	{
		$("ShowUpdateDetailsLink" + id).onclick = function () { return false; }
		$("ShowLogLink" + id).onclick = function() { return false; }
		$("ShowDocumentDetailsLink" + id).onclick = function() { return false; }
	}

	function Download(url) {
		new Ajax.Request(url, { method: 'get' });
	}
</script>

	<% if filter.Client:
		component CaptureFor, {"id" : "Title"}: %>
			История обновлений клиента ${filter.Client.Name}
	<% end %>

	<div class="PageHeader">
		История обновлений клиента ${filter.Client.Name}
	</div>

	<% component CaptureFor, {"id" : "PostToServer"}: %>
		${FormHelper.HiddenField("clientCode", filter.Client.Id)}
	<% end %>

<%  else: %>

	<% if filter.User: %>

		<% component CaptureFor, {"id" : "Title"}: %>
			История обновлений пользователя ${filter.User.Login}
		<% end %>

		<div class="PageHeader">
			История обновлений пользователя ${filter.User.Login}
		</div>

		<% component CaptureFor, {"id" : "PostToServer"}: %>
			${FormHelper.HiddenField("userId", filter.User.Id)}
		<% end %>

	<% end %>
<%
	end

	if not filter.UpdateType:
		OutputSubView("SelectDateIntervalSubView")
	else:
%>
	<table width="100%">
		<tr align="center"><td><font face="Verdana" size="2"><b>${BindingHelper.GetDescription(filter.UpdateType)}</b></font></td></tr>
		<tr align="center"><td style="padding-bottom: 15px"><font face="Verdana" size="2">Клиентов, отвечающих условиям выборки: ${logEntities.Count}</font></td></tr>
	</table>
<%	
	end
%>

<div>
	<table class="DataTable">
		<thead>
		<% if logEntities.Count: %>
		<tr>
			<th>
				${app.Sortable("Дата", "RequestTime")}
			</th>
			<% if filter.ShowRegion(): %>
			<th>
				${app.Sortable("Регион", "Region")}
			</th>
			<% end %>
			<% if filter.ShowClient(): %>
			<th>
				${app.Sortable("Клиент", "ClientName")}
			</th>
			<% end %>
			<% if filter.ShowUpdateType(): %>
			<th>
				${app.Sortable("Тип обновления", "UpdateType")}
			</th>
			<% end %>
			<% if filter.ShowUser(): %>
			<th>
				${app.Sortable("Пользователь", "Login")}
			</th>
			<% end %>
			<% if filter.ShowUpdateSize(): %>
			<th>
				${app.Sortable("Размер приготовленных данных", "ResultSize")}
			</th>
			<% end %>
			<th>
				${app.Sortable("Версия", "AppVersion")}
			</th>
			<th>
				${app.Sortable("Дополнительно", "Addition")}
			</th>
			<% if filter.ShowLog(): %>
			<th>Лог</th>
			<% end %>
		</tr>
		</thead>
		<tbody class="HighLightCurrentRow">
		<% for i, logEntity in enumerate(logEntities): %>
		<tr class="${ViewHelper.GetRowStyle(i)}" id="logRow${logEntity.Id}" align="center">
			<td class="${'NotCommitedUpdate' if not logEntity.Commit}" style="width:1%;">
				${logEntity.RequestTime}
			</td>
			<% if filter.ShowRegion(): %>
			<td>
				${logEntity.User.Client.HomeRegion.Name}
			</td>
			<% end %>
			<% if filter.ShowClient(): %>
			<td>
				<a title="ClientSettings" href="${siteroot}/client/${logEntity.User.Client.Id}">${logEntity.User.Client.Name}</a>
			</td>
			<% end %>
			<% if filter.ShowUpdateType(): %>
			<td>
			<% if logEntity.IsDataTransferUpdateType(): %>
				<a id="ShowUpdateDetailsLink${logEntity.Id}" href="javascript:void(0);" onclick="return ShowDownloadResult(${logEntity.Id}, 'ShowUpdateDetails.rails?updateLogEntityId=${logEntity.Id}', 'UpdateDetails');">
					${BindingHelper.GetDescription(logEntity.UpdateType)}
				</a>
			<% else: %>
					${BindingHelper.GetDescription(logEntity.UpdateType)}
			<% end %>
			</td>
			<% end %>
			<% if filter.ShowUser(): %>
			<td>
				<a title="UserSettings" href="${siteroot}/users/${logEntity.User.Login}/edit">${logEntity.User.GetLoginWithName()}</a>
			</td>
			<% end %>
			<% if filter.ShowUpdateSize(): %>
				<td>
					${ViewHelper.ConvertToUserFriendlySize(logEntity.ResultSize)}
				</td>
			<% end %>
			<td>
				${logEntity.AppVersion}
			</td>
			<td style="text-align:center;">
				${logEntity.Addition}
			</td>
			<% if filter.ShowLog(): %>
			<td>
				<% if not string.IsNullOrEmpty(logEntity.Log): %>
				<a id="ShowLogLink${logEntity.Id}" href="javascript:void(0);" onclick="return ShowDownloadResult(${logEntity.Id}, 'ShowDownloadLog.rails?updateLogEntityId=${logEntity.Id}', 'DownloadLog');">
					Лог
				</a>
				<% else: %>
				-
				<% end %>
			</td>
			<% end %>
		</tr>
	<% 
			end
		else:
	%>
		<tr class="EmptyData">
			<td style="width:1%;">
				За указанный период клиент не обновлялся
			</td>
		</tr>
		</tbody>
	</table>
	<% end %>
</div>

<% component CaptureFor, {"id" : "Title"}: %>
	История обновлений
<% end %>

<script type="text/javascript" src="${siteroot}/JavaScript/Main.js"></script>
<script type="text/javascript">
	function ShowDownloadResult(id, url, callerDescription) {
		var isCallerVisible = IsVisible(id, callerDescription);
		HideAll(id, function () {
			if (!isCallerVisible)
				Download(url);
		});
	}

	function Hide(id, description, afterFinish) {
		$("#" + description + id).slideUp(0.5, function () {
			$("#" + description + "Row" + id).remove();
			afterFinish();
		});
	}

	function HideAll(id, afterFinish) {
		if (IsVisible(id, "DownloadLog")) {
			Hide(id, "DownloadLog", afterFinish);
		}
		else if (IsVisible(id, "UpdateDetails")) {
			Hide(id, "UpdateDetails", afterFinish);
		}
		else if (IsVisible(id, "DocumentDetails")) {
			Hide(id, "DocumentDetails", afterFinish);
		}
		else {
			afterFinish();
		}
	}
	
	function IsVisible(id, description) {
		return $("#" + description + id).length > 0;
	}
	
	function DisableAction(id)
	{
		$("#ShowUpdateDetailsLink" + id).onclick = function () { return false; }
		$("#ShowLogLink" + id).onclick = function() { return false; }
		$("#ShowDocumentDetailsLink" + id).onclick = function() { return false; }
	}

	function Download(url) {
		$.ajax({ url: url });
	}
</script>

	<% if filter.Client:
		component CaptureFor, {"id" : "Title"}: %>
			История обновлений клиента ${filter.Client.Name}
	<% end %>

	<% component CaptureFor, {"id" : "PostToServer"}: %>
		${FormHelper.HiddenField("clientCode", filter.Client.Id)}
	<% end %>

<%  else: %>

	<% if filter.User: %>

		<% component CaptureFor, {"id" : "Title"}: %>
			История обновлений пользователя ${filter.User.Login}
		<% end %>

		<% component CaptureFor, {"id" : "PostToServer"}: %>
			${FormHelper.HiddenField("userId", filter.User.Id)}
		<% end %>

	<% end %>
<%
	end

	if not filter.UpdateType:
		OutputSubView("SelectDateIntervalSubView")
	else:
%>
	<table width="100%">
		<tr align="center"><td><font face="Verdana" size="2"><b>${BindingHelper.GetDescription(filter.UpdateType)}</b></font></td></tr>
		<tr align="center"><td style="padding-bottom: 15px"><font face="Verdana" size="2">Клиентов, отвечающих условиям выборки: ${logEntities.Count}</font></td></tr>
	</table>
<%	
	end
%>

<div>
	<table class="DataTable">
		<thead>
		<% if logEntities.Count: %>
		<tr>
			<th>
				${app.Sortable("Дата", "RequestTime")}
			</th>
			<% if filter.ShowRegion(): %>
			<th>
				${app.Sortable("Регион", "Region")}
			</th>
			<% end %>
			<% if filter.ShowClient(): %>
			<th>
				${app.Sortable("Клиент", "ClientName")}
			</th>
			<% end %>
			<% if filter.ShowUpdateType(): %>
			<th>
				${app.Sortable("Тип обновления", "UpdateType")}
			</th>
			<% end %>
			<% if filter.ShowUser(): %>
			<th>
				${app.Sortable("Пользователь", "Login")}
			</th>
			<% end %>
			<% if filter.ShowUpdateSize(): %>
			<th>
				${app.Sortable("Размер приготовленных данных", "ResultSize")}
			</th>
			<% end %>
			<th>
				${app.Sortable("Версия", "AppVersion")}
			</th>
			<th>
				${app.Sortable("Дополнительно", "Addition")}
			</th>
			<% if filter.ShowLog(): %>
			<th>Лог</th>
			<% end %>
		</tr>
		</thead>
		<tbody class="HighLightCurrentRow">
		<% for i, log in enumerate(logEntities): %>
		<tr class="${ViewHelper.GetRowStyle(i)}" id="logRow${log.Id}" align="center">
			<td class="${'NotCommitedUpdate' if not log.Commit}" style="width:1%;">
				${log.RequestTime}
			</td>
			<% if filter.ShowRegion(): %>
			<td>
				${?log.User.Client.HomeRegion.Name}
			</td>
			<% end %>
			<% if filter.ShowClient(): %>
			<td>
				<% if log.User.Client: %>
				<a title="ClientSettings" href="${siteroot}/client/${log.User.Client.Id}">${log.User.Client.Name}</a>
				<% end %>
			</td>
			<% end %>
			<% if filter.ShowUpdateType(): %>
			<td>
			<% if log.IsDataTransferUpdateType(): %>
				<a id="ShowUpdateDetailsLink${log.Id}" href="javascript:void(0);" onclick="return ShowDownloadResult(${log.Id}, 'ShowUpdateDetails.rails?updateLogEntityId=${log.Id}', 'UpdateDetails');">
					${BindingHelper.GetDescription(log.UpdateType)}
				</a>
			<% else: %>
					${BindingHelper.GetDescription(log.UpdateType)}
			<% end %>
			</td>
			<% end %>
			<% if filter.ShowUser(): %>
			<td>
				<a title="UserSettings" href="${siteroot}/users/${log.User.Id}/edit">${log.User.GetLoginWithName()}</a>
			</td>
			<% end %>
			<% if filter.ShowUpdateSize(): %>
				<td>
					${ViewHelper.ConvertToUserFriendlySize(log.ResultSize)}
				</td>
			<% end %>
			<td>
				${log.AppVersion}
			</td>
			<td style="text-align:center;">
				${log.Addition}
			</td>
			<% if filter.ShowLog(): %>
			<td>
				<% if not string.IsNullOrEmpty(log.Log): %>
				<a id="ShowLogLink${log.Id}" href="javascript:void(0);" onclick="return ShowDownloadResult(${log.Id}, 'ShowDownloadLog.rails?updateLogEntityId=${log.Id}', 'DownloadLog');">
					Лог
				</a>
				<% else: %>
				-
				<% end %>
			</td>
			<% end %>
		</tr>
	<% 
			end
		else:
	%>
		<tr class="EmptyData">
			<td style="width:1%;">
				За указанный период клиент не обновлялся
			</td>
		</tr>
		</tbody>
	</table>
	<% end %>
</div>

<!--
    Для использования данного SubView, перед отображением нужно передать в PropertyBag упорядоченный массив всех регионов
    Пример:
        PropertyBag["regions"] = Region.FindAll().OrderBy(region => region.Name).ToArray();
-->
<script type="text/javascript">

	function OnHomeRegionChanged(homeRegionId) {
		jQuery("#RegionsTableBody").find("tr").remove();
		var link = "${siteroot}/Regions/DefaultRegions?homeRegionId=" + homeRegionId;
		<% if IsDefined("SingleRegions"): %>
			link += "&singleRegions=${singleRegions}";
		<% end %>
		<% if IsDefined("client") and client.Id: %>
			link += "&clientId=${client.Id}";
		<% end %>
		jQuery.ajax({
			url: link,
			cache: false,
			success: function(html) {
				jQuery("#RegionsTableBody").append(html);
				updateSelectedRegions();
			}
		});
	}

	function ShowAllRegions(homeRegionId) {
		jQuery("#RegionsTableBody").find("tr").remove();
		var regions = jQuery("#HomeRegionComboBox")[0].options;
		for (i = 0; i < regions.length; i++) 
		{
			var regionId = parseInt(regions[i].value);
			var flags = jQuery("#" + regions[i].id).attr('class').split(',');
			var isForBrowse = parseInt(flags[0]);
			var isForOrder = parseInt(flags[1]);
			AddRegionRow(regionId, regions[i].text, isForBrowse, isForOrder);
		}
	}

	function ShowRegions() {
		var homeRegionId = jQuery("#HomeRegionComboBox").val();
		var countDisplayedRegions = jQuery("#RegionsTableBody").children().length;
		if (countDisplayedRegions == ${regions.Length}) {
			// Оставить только регионы по умолчанию
			textLink = "Показать все регионы";
			OnHomeRegionChanged(homeRegionId);
		} else {
			// Показать все регионы
			updateSelectedRegions();
			ShowAllRegions(homeRegionId);
			textLink = "Показать только регионы по умолчанию";
		}
		jQuery("#ShowRegionsLink")[0].innerHTML = textLink;
	}

	function AddRegionRow(regionId, regionName, isForBrowse, isForOrder) {
		var browseChecked = "";
		var orderChecked = "";
		if (isForBrowse)
			browseChecked = "checked='checked'";
		if (isForOrder)
			orderChecked = "checked='checked'";
		var html = "<tr id='RegionRow" + regionId + "'>" +
			"<td style='text-align: left'>" + regionName + 
			"<input type='hidden' name='regionSettings[" + regionId + "].Id' value='" + regionId + "' />" +
			"</td>";
		<% if IsDefined(@singleRegions) and singleRegions: %>
		var html = html +
			"<td style='text-align: center'>" +
				"<input id='browseRegion" + regionId + "' type='checkbox' " + browseChecked + 
					"name='regionSettings[" + regionId + "].IsAvaliableForBrowse' value='true'" +
					"onclick='onClickBrowseRegion(" + regionId + ")' />" +
				"<input id='regionSettings[" + regionId + "].IsAvaliableForBrowse' type='hidden' name='regionSettings[" + regionId + "].IsAvaliableForBrowse' value='false' />" +
			"</td>";
		<% else: %>
		var html = html + "<td style='text-align: center'>" +
				"<input id='browseRegion" + regionId + "' type='checkbox' " + browseChecked + 
					"name='regionSettings[" + regionId + "].IsAvaliableForBrowse' value='true'" +
					"onclick='onClickBrowseRegion(" + regionId + ")' />" +
				"<input id='regionSettings[" + regionId + "].IsAvaliableForBrowse' type='hidden' name='regionSettings[" + regionId + "].IsAvaliableForBrowse' value='false' />" +
			"</td>" +
			"<td style='text-align: center'>" +
				"<input id='orderRegion" + regionId + "' type='checkbox' " + orderChecked + 
					"name='regionSettings[" + regionId + "].IsAvaliableForOrder' value='true'" +
					"onclick='onClickOrderRegion(" + regionId + ")' />" +
				"<input id='regionSettings[" + regionId + "].IsAvaliableForOrder' type='hidden' name='regionSettings[" + regionId + "].IsAvaliableForOrder' value='false' />" +
			"</td>" +
			"</tr>";
		<% end %>
		jQuery("#RegionsTableBody").append(html);
		jQuery("#RegionRow" + regionId).hover(
			// mouseover handler
			function() { this.setAttribute("class", "SelectedRow"); },
			// mouseout handler
			function() { this.removeAttribute("class"); }
		);
	}

	$(function () {
		updateSelectedRegions();
	});

	function updateSelectedRegions()
	{
		if (!window.selectedRegions)
			return;

		selectedRegions.each(function(r) { selectedRegions.remove(r); });
		$("#RegionsTableBody tr input[type=checkbox][checked]").each(function() {
			var matches = /\d+/.exec($(this).attr("name"));
			if (!matches.length)
				return;
			var regionId = matches[0]
			addRegion(getRegion(regionId));
		});
	}

	function onClickOrderRegion(regionId)
	{
		var checked = jQuery("#orderRegion" + regionId).attr("checked");
		if (checked) {
			$("#browseRegion" + regionId).attr("checked", "checked");
		}
	}

	function onClickBrowseRegion(regionId)
	{
		var checked = jQuery("#browseRegion" + regionId).attr('checked');
		if (!checked) {
			jQuery("#orderRegion" + regionId).removeAttr("checked");
		}

		if (checked)
			addRegion(getRegion(regionId));
		else
			removeRegion(getRegion(regionId));
	}

	function addRegion(region)
	{
		if (region)
			selectedRegions.add(region);
	}

	function removeRegion(region)
	{
		if (region)
			selectedRegions.remove(region);
	}

	function getRegion(regionId)
	{
		if (!window.regions)
			return null;

		return regions.find(function (region) {
			return region.get("id") == regionId;
		});
	}

</script>

<table style="width: 100%; border: 0px;">
    <tr style="${'display: none' if IsDefined("UserRegistration")}">
        <td>
            Домашний регион:
            <select id="HomeRegionComboBox" name="homeRegion" onchange="OnHomeRegionChanged(this.value)">
<%              defaultShowRegions = []
                browseRegions = []
                orderRegions = []
                homeRegion = regions[0]
                if (IsDefined("client")):
                    homeRegion = client.HomeRegion                            
                end
                for i, region in enumerate(regions): 
                    isForBrowse = homeRegion.Id == region.Id;
                    isForOrder = isForBrowse;
                    if not IsDefined("UserRegistration") and (region.Id & homeRegion.DefaultShowRegionMask > 0): 
                        defaultShowRegions.Add(region.Id)
                    end
                    if (IsDefined("drugstore") and IsDefined("client")):
                        isForBrowse = (client.MaskRegion & region.Id) > 0;
                        isForOrder = (drugstore.OrderRegionMask & region.Id) > 0;
                    end
                    if (IsDefined("UserRegistration") and (isForBrowse or isForOrder)):
                        defaultShowRegions.Add(region.Id)
                    end
                    if (isForBrowse):
                        browseRegions.Add(region.Id)
                    end
                    if (isForOrder):
                        orderRegions.Add(region.Id)
                    end %>
                <option id="Region${region.Id}" class="${System.Convert.ToInt32(isForBrowse)},${System.Convert.ToInt32(isForOrder)}" value="${region.Id}" ${"selected" if (region.Id == homeRegion.Id)}>${region.Name}</option>
<%              end %>
            </select>
        </td>
    </tr>
    <tr>
        <td>
            <table id="RegionsTable" style="width: 100%; border: 0px">
				<thead>
					<tr>
						<th style="width: 70%; text-align: left">Регион</th>
						<% if IsDefined("SingleRegions"): %>
							<th style="width: 15%; text-align: center">Доступные регионы</th>
						<% else: %>
							<th style="width: 15%; text-align: center">Получать обзор</th>
							<th style="width: 15%; text-align: center">Доступен для заказа</th>
						<% end %>
					</tr>
				</thead>
				<tbody id="RegionsTableBody" class="HighLightCurrentRow">
					<% for i, region in enumerate(regions):
						if (defaultShowRegions.Contains(region.Id) or browseRegions.Contains(region.Id) or (orderRegions.Contains(region.Id))): %>
					<tr id="RegionRow${region.Id}">
						<td style="text-align: left">
							${region.Name}
							<input type="hidden" name="regionSettings[${region.Id}].Id" value="${region.Id}" />
						</td>
						<% if IsDefined(@singleRegions) and singleRegions: %>
							<td style="text-align: center">
								<% OutputSubView("/Templates/Region", {@checked: browseRegions.Contains(region.Id), @type: @Browse, @region: region}) %>
							</td>
						<% else: %>
							<td style="text-align: center">
								<% OutputSubView("/Templates/Region", {@checked: browseRegions.Contains(region.Id), @type: @Browse, @region: region}) %>
							</td>
							<td style="text-align: center">
								<% OutputSubView("/Templates/Region", {@checked: orderRegions.Contains(region.Id), @type: @Order, @region: region}) %>
							</td>
						<% end %>
					</tr>
					<% end
					end %>
				</tbody>
			</table>
			<% if not IsDefined("UserRegistration"): %>
				<a href="javascript:" id="ShowRegionsLink" onclick="ShowRegions()">Показать все регионы</a>
			<% end %>
		</td>
	</tr>
</table>